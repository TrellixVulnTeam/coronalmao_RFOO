{"ast":null,"code":"var _jsxFileName = \"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/pieChart.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PieChartItem from './PieChartItem';\nimport { connect } from 'react-redux';\nimport Spinner from 'react-bootstrap/Spinner';\nimport PropTypes from 'prop-types';\n\nconst PieChart = ({\n  AllCountriesData: {\n    WWStats,\n    allCountriesloading\n  },\n  CurrentCountryData: {\n    currentCountry\n  }\n}) => {\n  useEffect(() => {\n    if (currentCountry) {\n      setDatas({\n        Cases: currentCountry.cases,\n        Deaths: currentCountry.deaths,\n        Recovered: currentCountry.recovered\n      });\n    } else if (WWStats) {\n      setDatas({\n        Cases: WWStats.cases,\n        Deaths: WWStats.deaths,\n        Recovered: WWStats.recovered\n      });\n    }\n  }, [WWStats, currentCountry]);\n  const [getDatas, setDatas] = useState(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !getDatas || allCountriesloading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))) : /*#__PURE__*/React.createElement(PieChartItem, {\n    Cases: getDatas.Cases,\n    Deaths: getDatas.Deaths,\n    Recovered: getDatas.Recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\n\nPieChart.propTypes = {\n  WWStats: PropTypes.object,\n  allCountriesloading: PropTypes.bool,\n  currentCountry: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  AllCountriesData: state.AllCountries,\n  CurrentCountryData: state.CurrentCountryData\n});\n\nexport default connect(mapStateToProps)(PieChart);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/pieChart.jsx"],"names":["React","useEffect","useState","PieChartItem","connect","Spinner","PropTypes","PieChart","AllCountriesData","WWStats","allCountriesloading","CurrentCountryData","currentCountry","setDatas","Cases","cases","Deaths","deaths","Recovered","recovered","getDatas","propTypes","object","bool","mapStateToProps","state","AllCountries"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GADF;AAEhBC,EAAAA,kBAAkB,EAAE;AAAEC,IAAAA;AAAF;AAFJ,CAAD,KAGX;AACJX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,cAAJ,EAAoB;AAClBC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,KAAK,EAAEF,cAAc,CAACG,KADf;AAEPC,QAAAA,MAAM,EAAEJ,cAAc,CAACK,MAFhB;AAGPC,QAAAA,SAAS,EAAEN,cAAc,CAACO;AAHnB,OAAD,CAAR;AAKD,KAND,MAMO,IAAIV,OAAJ,EAAa;AAClBI,MAAAA,QAAQ,CAAC;AACPC,QAAAA,KAAK,EAAEL,OAAO,CAACM,KADR;AAEPC,QAAAA,MAAM,EAAEP,OAAO,CAACQ,MAFT;AAGPC,QAAAA,SAAS,EAAET,OAAO,CAACU;AAHZ,OAAD,CAAR;AAKD;AACF,GAdQ,EAcN,CAACV,OAAD,EAAUG,cAAV,CAdM,CAAT;AAgBA,QAAM,CAACQ,QAAD,EAAWP,QAAX,IAAuBX,QAAQ,CAAC,IAAD,CAArC;AAEA,sBACE,0CACG,CAACkB,QAAD,IAAaV,mBAAb,gBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,OAAO,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADD,gBAOC,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEU,QAAQ,CAACN,KADlB;AAEE,IAAA,MAAM,EAAEM,QAAQ,CAACJ,MAFnB;AAGE,IAAA,SAAS,EAAEI,QAAQ,CAACF,SAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAiBD,CAvCD;;AAyCAX,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAEH,SAAS,CAACgB,MADA;AAEnBZ,EAAAA,mBAAmB,EAAEJ,SAAS,CAACiB,IAFZ;AAGnBX,EAAAA,cAAc,EAAEN,SAAS,CAACgB;AAHP,CAArB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,gBAAgB,EAAEiB,KAAK,CAACC,YADQ;AAEhCf,EAAAA,kBAAkB,EAAEc,KAAK,CAACd;AAFM,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PieChartItem from './PieChartItem';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PieChart = ({\r\n  AllCountriesData: { WWStats, allCountriesloading },\r\n  CurrentCountryData: { currentCountry }\r\n}) => {\r\n  useEffect(() => {\r\n    if (currentCountry) {\r\n      setDatas({\r\n        Cases: currentCountry.cases,\r\n        Deaths: currentCountry.deaths,\r\n        Recovered: currentCountry.recovered\r\n      });\r\n    } else if (WWStats) {\r\n      setDatas({\r\n        Cases: WWStats.cases,\r\n        Deaths: WWStats.deaths,\r\n        Recovered: WWStats.recovered\r\n      });\r\n    }\r\n  }, [WWStats, currentCountry]);\r\n\r\n  const [getDatas, setDatas] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      {!getDatas || allCountriesloading ? (\r\n        <div className='Spinner'>\r\n          <Spinner animation='border' role='status' variant='success'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <PieChartItem\r\n          Cases={getDatas.Cases}\r\n          Deaths={getDatas.Deaths}\r\n          Recovered={getDatas.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  WWStats: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n  currentCountry: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  AllCountriesData: state.AllCountries,\r\n  CurrentCountryData: state.CurrentCountryData\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChart);\r\n"]},"metadata":{},"sourceType":"module"}