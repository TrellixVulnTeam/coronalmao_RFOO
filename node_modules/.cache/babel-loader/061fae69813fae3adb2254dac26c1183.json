{"ast":null,"code":"import _slicedToArray from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import BarChartItem from'./BarChartItem';import{connect}from'react-redux';import Spinner from'react-bootstrap/Spinner';var BarChart=function BarChart(_ref){var _ref$DataHistory=_ref.DataHistory,Dates=_ref$DataHistory.Dates,Cases=_ref$DataHistory.Cases,Deaths=_ref$DataHistory.Deaths,Recovered=_ref$DataHistory.Recovered,WWDates=_ref$DataHistory.WWDates,WWCases=_ref$DataHistory.WWCases,WWDeaths=_ref$DataHistory.WWDeaths,WWRecovered=_ref$DataHistory.WWRecovered,currentCountryLoading=_ref$DataHistory.currentCountryLoading;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),getDateHistory=_useState2[0],setDataHistory=_useState2[1];useEffect(function(){WWDates&&!Dates?setDataHistory({Dates:WWDates,Cases:WWCases,Deaths:WWDeaths,Recovered:WWRecovered}):setDataHistory({Dates:Dates,Cases:Cases,Deaths:Deaths,Recovered:Recovered});// eslint-disable-next-line\n},[Dates,WWDates]);return/*#__PURE__*/React.createElement(React.Fragment,null,!WWDates&&!WWCases&&!WWDeaths&&!WWRecovered||currentCountryLoading?/*#__PURE__*/React.createElement(\"div\",{className:\"Spinner\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"success\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))):/*#__PURE__*/React.createElement(BarChartItem,{Dates:getDateHistory.Dates,Cases:getDateHistory.Cases,Deaths:getDateHistory.Deaths,Recovered:getDateHistory.Recovered}));};var mapStateToProps=function mapStateToProps(state){return{DataHistory:state.DataHistory};};export default connect(mapStateToProps)(BarChart);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/BarChart.jsx"],"names":["React","useState","useEffect","BarChartItem","connect","Spinner","BarChart","DataHistory","Dates","Cases","Deaths","Recovered","WWDates","WWCases","WWDeaths","WWRecovered","currentCountryLoading","getDateHistory","setDataHistory","mapStateToProps","state"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAYX,2BAXJC,WAWI,CAVFC,KAUE,kBAVFA,KAUE,CATFC,KASE,kBATFA,KASE,CARFC,MAQE,kBARFA,MAQE,CAPFC,SAOE,kBAPFA,SAOE,CANFC,OAME,kBANFA,OAME,CALFC,OAKE,kBALFA,OAKE,CAJFC,QAIE,kBAJFA,QAIE,CAHFC,WAGE,kBAHFA,WAGE,CAFFC,qBAEE,kBAFFA,qBAEE,eACqCf,QAAQ,CAAC,IAAD,CAD7C,wCACGgB,cADH,eACmBC,cADnB,eAGJhB,SAAS,CAAC,UAAM,CACdU,OAAO,EAAI,CAACJ,KAAZ,CACIU,cAAc,CAAC,CACbV,KAAK,CAAEI,OADM,CAEbH,KAAK,CAAEI,OAFM,CAGbH,MAAM,CAAEI,QAHK,CAIbH,SAAS,CAAEI,WAJE,CAAD,CADlB,CAOIG,cAAc,CAAC,CACbV,KAAK,CAALA,KADa,CAEbC,KAAK,CAALA,KAFa,CAGbC,MAAM,CAANA,MAHa,CAIbC,SAAS,CAATA,SAJa,CAAD,CAPlB,CAaI;AACL,CAfQ,CAeN,CAACH,KAAD,CAAQI,OAAR,CAfM,CAAT,CAiBA,mBACE,wCACI,CAACA,OAAD,EAAY,CAACC,OAAb,EAAwB,CAACC,QAAzB,EAAqC,CAACC,WAAvC,EACDC,qBADC,cAEC,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,OAAO,CAAC,SAAlD,eACE,4BAAM,SAAS,CAAC,SAAhB,eADF,CADF,CAFD,cAQC,oBAAC,YAAD,EACE,KAAK,CAAEC,cAAc,CAACT,KADxB,CAEE,KAAK,CAAES,cAAc,CAACR,KAFxB,CAGE,MAAM,CAAEQ,cAAc,CAACP,MAHzB,CAIE,SAAS,CAAEO,cAAc,CAACN,SAJ5B,EATJ,CADF,CAmBD,CAnDD,CAqDA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCb,WAAW,CAAEa,KAAK,CAACb,WADa,CAAL,EAA7B,CAgBA,cAAeH,CAAAA,OAAO,CAACe,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BarChartItem from './BarChartItem';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BarChart = ({\r\n  DataHistory: {\r\n    Dates,\r\n    Cases,\r\n    Deaths,\r\n    Recovered,\r\n    WWDates,\r\n    WWCases,\r\n    WWDeaths,\r\n    WWRecovered,\r\n    currentCountryLoading\r\n  }\r\n}) => {\r\n  const [getDateHistory, setDataHistory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    WWDates && !Dates\r\n      ? setDataHistory({\r\n          Dates: WWDates,\r\n          Cases: WWCases,\r\n          Deaths: WWDeaths,\r\n          Recovered: WWRecovered\r\n        })\r\n      : setDataHistory({\r\n          Dates,\r\n          Cases,\r\n          Deaths,\r\n          Recovered\r\n        });\r\n        // eslint-disable-next-line\r\n  }, [Dates, WWDates]);\r\n\r\n  return (\r\n    <>\r\n      {(!WWDates && !WWCases && !WWDeaths && !WWRecovered) ||\r\n      currentCountryLoading ? (\r\n        <div className='Spinner'>\r\n          <Spinner animation='border' role='status' variant='success'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <BarChartItem\r\n          Dates={getDateHistory.Dates}\r\n          Cases={getDateHistory.Cases}\r\n          Deaths={getDateHistory.Deaths}\r\n          Recovered={getDateHistory.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  DataHistory: state.DataHistory\r\n});\r\n\r\nBarChart.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array,\r\n  WWDates: PropTypes.array,\r\n  WWCases: PropTypes.array,\r\n  WWDeaths: PropTypes.array,\r\n  WWRecovered: PropTypes.array,\r\n  currentCountryLoading: PropTypes.bool\r\n};\r\n\r\nexport default connect(mapStateToProps)(BarChart);\r\n"]},"metadata":{},"sourceType":"module"}