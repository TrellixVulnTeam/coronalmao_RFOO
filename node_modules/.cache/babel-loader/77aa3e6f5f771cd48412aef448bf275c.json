{"ast":null,"code":"import _defineProperty from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from\"react\";import{connect}from\"react-redux\";import ReactMapGL,{FlyToInterpolator,Marker,Popup}from\"react-map-gl\";import Spinner from\"react-bootstrap/Spinner\";import PropTypes from\"prop-types\";var apiKey;process.env.NODE_ENV?apiKey=process.env.REACT_APP_API_KEY:apiKey=process.env.API_KEY;var GlobalMap=function GlobalMap(_ref){var _ref$CurrentCountryDa=_ref.CurrentCountryData,currentCountry=_ref$CurrentCountryDa.currentCountry,currentCountryLoading=_ref$CurrentCountryDa.currentCountryLoading,_ref$AllCountriesData=_ref.AllCountriesData,allCountriesData=_ref$AllCountriesData.allCountriesData,allCountriesloading=_ref$AllCountriesData.allCountriesloading;var _useState=useState({width:\"100%\",height:\"100%\",scrollZoom:false,boxZoom:false,doubleClickZoom:false}),_useState2=_slicedToArray(_useState,2),viewPort=_useState2[0],setViewPort=_useState2[1];var _useState3=useState({dragPan:false,touchAction:\"pan-y\",dragRotate:false,scrollZoom:false,touchZoom:false,touchRotate:false,keyboard:false,doubleClickZoom:false}),_useState4=_slicedToArray(_useState3,2),settings=_useState4[0],setsettings=_useState4[1];var _useState5=useState({state:false,lat:16,long:27}),_useState6=_slicedToArray(_useState5,2),popupState=_useState6[0],setPopupState=_useState6[1];useEffect(function(){if(currentCountry&&!currentCountryLoading){setViewPort(_objectSpread(_objectSpread({},viewPort),{},{latitude:currentCountry.lat,longitude:currentCountry.long,zoom:3.5,transitionDuration:3000,transitionInterpolator:new FlyToInterpolator()}));setPopupState({state:true,name:currentCountry.country,flag:currentCountry.flag,cases:currentCountry.cases,deaths:currentCountry.deaths,recovered:currentCountry.recovered,lat:currentCountry.lat,long:currentCountry.long});}else{setViewPort(_objectSpread(_objectSpread({},viewPort),{},{latitude:16,longitude:27,zoom:1.3,transitionDuration:3000,transitionInterpolator:new FlyToInterpolator()}));setPopupState(_objectSpread(_objectSpread({},popupState),{},{state:false}));}// eslint-disable-next-line\n},[currentCountry,currentCountryLoading]);return/*#__PURE__*/React.createElement(Fragment,null,allCountriesData===null||allCountriesloading?/*#__PURE__*/React.createElement(\"div\",{className:\"Spinner\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"success\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))):/*#__PURE__*/React.createElement(ReactMapGL,Object.assign({className:\"map\"},viewPort,settings,_defineProperty({mapboxApiAccessToken:apiKey,mapStyle:\"mapbox://styles/mapbox/dark-v10\",onViewportChange:function onViewportChange(viewPort){setViewPort(viewPort);}},\"mapboxApiAccessToken\",\"pk.eyJ1IjoibGFtaDMyIiwiYSI6ImNrZ29sdGw3cjBmM3oyenMzem44ZjhwYW0ifQ.TTXfuoTPvX0eYegfFZFy7Q\")),allCountriesData.map(function(country,id){return/*#__PURE__*/React.createElement(Marker,{key:id,latitude:country.countryInfo.lat,longitude:country.countryInfo.long,offsetTop:-15,offsetLeft:-5},currentCountry?country.countryInfo.lat===currentCountry.lat&&country.countryInfo.long===currentCountry.long?/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-circle selectedCircle\"}):/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-circle circle\"}):/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-circle circle\",onClick:function onClick(){return setPopupState({state:true,name:country.country,flag:country.countryInfo.flag,cases:country.cases,deaths:country.deaths,recovered:country.recovered,lat:country.countryInfo.lat,long:country.countryInfo.long});}}));}),popupState.state&&/*#__PURE__*/React.createElement(Popup,{latitude:popupState.lat,longitude:popupState.long,closeButton:false,offsetTop:-15,offsetLeft:3,className:\"popupup\",onClose:function onClose(){if(!currentCountry)setPopupState(_objectSpread(_objectSpread({},popupState),{},{state:false}));}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",{className:\"popupHeader\"},/*#__PURE__*/React.createElement(\"img\",{src:popupState.flag,alt:\"flag\",style:{width:\"60px\"}}),popupState.name),/*#__PURE__*/React.createElement(\"p\",{className:\"popupCases\"},\"Cases:\",\" \".concat(popupState.cases.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,\"$1,\"))),/*#__PURE__*/React.createElement(\"p\",{className:\"popupDeaths\"},\"Deaths:\",\" \".concat(popupState.deaths.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,\"$1,\"))),/*#__PURE__*/React.createElement(\"p\",{className:\"popupRecovered\"},\"Recovered:\",\" \".concat(popupState.recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,\"$1,\")))))));};GlobalMap.prototype={currentCountry:PropTypes.object,currentCountryLoading:PropTypes.bool,allCountriesData:PropTypes.object,allCountriesloading:PropTypes.bool};var mapStateToProps=function mapStateToProps(state){return{CurrentCountryData:state.CurrentCountryData,AllCountriesData:state.AllCountries};};export default connect(mapStateToProps)(GlobalMap);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Map/GlobalMap.jsx"],"names":["React","useState","useEffect","Fragment","connect","ReactMapGL","FlyToInterpolator","Marker","Popup","Spinner","PropTypes","apiKey","process","env","NODE_ENV","REACT_APP_API_KEY","API_KEY","GlobalMap","CurrentCountryData","currentCountry","currentCountryLoading","AllCountriesData","allCountriesData","allCountriesloading","width","height","scrollZoom","boxZoom","doubleClickZoom","viewPort","setViewPort","dragPan","touchAction","dragRotate","touchZoom","touchRotate","keyboard","settings","setsettings","state","lat","long","popupState","setPopupState","latitude","longitude","zoom","transitionDuration","transitionInterpolator","name","country","flag","cases","deaths","recovered","map","id","countryInfo","toString","replace","prototype","object","bool","mapStateToProps","AllCountries"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactMapGL, { FlyToInterpolator, Marker, Popup } from \"react-map-gl\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet apiKey;\r\nprocess.env.NODE_ENV\r\n  ? (apiKey = process.env.REACT_APP_API_KEY)\r\n  : (apiKey = process.env.API_KEY);\r\n\r\nconst GlobalMap = ({\r\n  CurrentCountryData: { currentCountry, currentCountryLoading },\r\n  AllCountriesData: { allCountriesData, allCountriesloading },\r\n}) => {\r\n  const [viewPort, setViewPort] = useState({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    scrollZoom: false,\r\n    boxZoom: false,\r\n    doubleClickZoom: false,\r\n  });\r\n\r\n  const [settings, setsettings] = useState({\r\n    dragPan: false,\r\n    touchAction: \"pan-y\",\r\n    dragRotate: false,\r\n    scrollZoom: false,\r\n    touchZoom: false,\r\n    touchRotate: false,\r\n    keyboard: false,\r\n    doubleClickZoom: false,\r\n  });\r\n\r\n  const [popupState, setPopupState] = useState({\r\n    state: false,\r\n    lat: 16,\r\n    long: 27,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentCountry && !currentCountryLoading) {\r\n      setViewPort({\r\n        ...viewPort,\r\n        latitude: currentCountry.lat,\r\n        longitude: currentCountry.long,\r\n        zoom: 3.5,\r\n        transitionDuration: 3000,\r\n        transitionInterpolator: new FlyToInterpolator(),\r\n      });\r\n      setPopupState({\r\n        state: true,\r\n        name: currentCountry.country,\r\n        flag: currentCountry.flag,\r\n        cases: currentCountry.cases,\r\n        deaths: currentCountry.deaths,\r\n        recovered: currentCountry.recovered,\r\n        lat: currentCountry.lat,\r\n        long: currentCountry.long,\r\n      });\r\n    } else {\r\n      setViewPort({\r\n        ...viewPort,\r\n        latitude: 16,\r\n        longitude: 27,\r\n        zoom: 1.3,\r\n        transitionDuration: 3000,\r\n        transitionInterpolator: new FlyToInterpolator(),\r\n      });\r\n      setPopupState({ ...popupState, state: false });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentCountry, currentCountryLoading]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {allCountriesData === null || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <ReactMapGL\r\n          className=\"map\"\r\n          {...viewPort}\r\n          {...settings}\r\n          mapboxApiAccessToken={apiKey}\r\n          mapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n          onViewportChange={(viewPort) => {\r\n            setViewPort(viewPort);\r\n          }}\r\n          mapboxApiAccessToken={\r\n            \"pk.eyJ1IjoibGFtaDMyIiwiYSI6ImNrZ29sdGw3cjBmM3oyenMzem44ZjhwYW0ifQ.TTXfuoTPvX0eYegfFZFy7Q\"\r\n          }\r\n        >\r\n          {allCountriesData.map((country, id) => (\r\n            <Marker\r\n              key={id}\r\n              latitude={country.countryInfo.lat}\r\n              longitude={country.countryInfo.long}\r\n              offsetTop={-15}\r\n              offsetLeft={-5}\r\n            >\r\n              {currentCountry ? (\r\n                country.countryInfo.lat === currentCountry.lat &&\r\n                country.countryInfo.long === currentCountry.long ? (\r\n                  <i className=\"fas fa-circle selectedCircle\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-circle circle\"></i>\r\n                )\r\n              ) : (\r\n                <i\r\n                  className=\"fas fa-circle circle\"\r\n                  onClick={() =>\r\n                    setPopupState({\r\n                      state: true,\r\n                      name: country.country,\r\n                      flag: country.countryInfo.flag,\r\n                      cases: country.cases,\r\n                      deaths: country.deaths,\r\n                      recovered: country.recovered,\r\n                      lat: country.countryInfo.lat,\r\n                      long: country.countryInfo.long,\r\n                    })\r\n                  }\r\n                ></i>\r\n              )}\r\n            </Marker>\r\n          ))}\r\n          {popupState.state && (\r\n            <Popup\r\n              latitude={popupState.lat}\r\n              longitude={popupState.long}\r\n              closeButton={false}\r\n              offsetTop={-15}\r\n              offsetLeft={3}\r\n              className=\"popupup\"\r\n              onClose={() => {\r\n                if (!currentCountry)\r\n                  setPopupState({ ...popupState, state: false });\r\n              }}\r\n            >\r\n              <div>\r\n                <h6 className=\"popupHeader\">\r\n                  <img\r\n                    src={popupState.flag}\r\n                    alt=\"flag\"\r\n                    style={{ width: \"60px\" }}\r\n                  />\r\n                  {popupState.name}\r\n                </h6>\r\n                <p className=\"popupCases\">\r\n                  Cases:\r\n                  {` ${popupState.cases\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n                <p className=\"popupDeaths\">\r\n                  Deaths:\r\n                  {` ${popupState.deaths\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n                <p className=\"popupRecovered\">\r\n                  Recovered:\r\n                  {` ${popupState.recovered\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n              </div>\r\n            </Popup>\r\n          )}\r\n        </ReactMapGL>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nGlobalMap.prototype = {\r\n  currentCountry: PropTypes.object,\r\n  currentCountryLoading: PropTypes.bool,\r\n  allCountriesData: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  CurrentCountryData: state.CurrentCountryData,\r\n  AllCountriesData: state.AllCountries,\r\n});\r\n\r\nexport default connect(mapStateToProps)(GlobalMap);\r\n"]},"metadata":{},"sourceType":"module"}