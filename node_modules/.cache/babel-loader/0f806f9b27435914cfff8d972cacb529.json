{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GET_HiSTORY_CURRENT_COUNTRY,GET_WW_DATA_HISTORY,CLEAR_CURRENT_COUNTRY,SET_HiSTORY_CURRENT_COUNTRY_LOADING,SET_HiSTORY_CURRENT_COUNTRY_ERROR}from\"./Types\";var baseUrl;process.env.NODE_ENV?baseUrl=process.env.REACT_APP_BASE_URL:baseUrl=process.env.BASE_URL;export var getCurrentHistory=function getCurrentHistory(country){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var Dates,Cases,Deaths,Recovered,res,Data,_i,_Object$entries,_Object$entries$_i,key,value,newDate,_i2,_Object$entries2,_Object$entries2$_i,_key,_value,_i3,_Object$entries3,_Object$entries3$_i,_key2,_value2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Dates=[];Cases=[];Deaths=[];Recovered=[];setLoading();_context.prev=5;_context.next=8;return fetch(\"https://corona.lmao.ninja/v2/historical/\".concat(country));case 8:res=_context.sent;if(res.ok){_context.next=14;break;}dispatch({type:SET_HiSTORY_CURRENT_COUNTRY_ERROR,payload:\"HTTP Status: \".concat(res.status)});throw new Error(\"HTTP Status: \".concat(res.status));case 14:_context.next=16;return res.json();case 16:Data=_context.sent;for(_i=0,_Object$entries=Object.entries(Data.timeline.cases);_i<_Object$entries.length;_i++){_Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];newDate=key.split(\"/\");Dates.push(\"\".concat(newDate[1],\"/\").concat(newDate[0]));Cases.push(value);}for(_i2=0,_Object$entries2=Object.entries(Data.timeline.deaths);_i2<_Object$entries2.length;_i2++){_Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key=_Object$entries2$_i[0],_value=_Object$entries2$_i[1];Deaths.push(_value);}for(_i3=0,_Object$entries3=Object.entries(Data.timeline.recovered);_i3<_Object$entries3.length;_i3++){_Object$entries3$_i=_slicedToArray(_Object$entries3[_i3],2),_key2=_Object$entries3$_i[0],_value2=_Object$entries3$_i[1];Recovered.push(_value2);}if(Dates.length>0&&Cases.length>0&&Deaths.length>0&&Recovered.length>0){dispatch({type:GET_HiSTORY_CURRENT_COUNTRY,payload:{Data:Data,Dates:Dates,Cases:Cases,Deaths:Deaths,Recovered:Recovered}});}case 21:_context.next=26;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](5);dispatch({type:SET_HiSTORY_CURRENT_COUNTRY_ERROR,payload:_context.t0.message});case 26:case\"end\":return _context.stop();}}},_callee,null,[[5,23]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getWWHistory=function getWWHistory(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var Dates,Cases,Deaths,Recovered,res,Data,_i4,_Object$entries4,_Object$entries4$_i,key,value,newDate,_i5,_Object$entries5,_Object$entries5$_i,_key3,_value3,_i6,_Object$entries6,_Object$entries6$_i,_key4,_value4;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Dates=[];Cases=[];Deaths=[];Recovered=[];setLoading();_context2.prev=5;_context2.next=8;return fetch(\"\".concat(baseUrl,\"v2/historical/all\"));case 8:res=_context2.sent;if(res.ok){_context2.next=14;break;}dispatch({type:SET_HiSTORY_CURRENT_COUNTRY_ERROR,payload:\"HTTP Status: \".concat(res.status)});throw new Error(\"HTTP Status: \".concat(res.status));case 14:_context2.next=16;return res.json();case 16:Data=_context2.sent;for(_i4=0,_Object$entries4=Object.entries(Data.cases);_i4<_Object$entries4.length;_i4++){_Object$entries4$_i=_slicedToArray(_Object$entries4[_i4],2),key=_Object$entries4$_i[0],value=_Object$entries4$_i[1];newDate=key.split(\"/\");Dates.push(\"\".concat(newDate[1],\"/\").concat(newDate[0]));Cases.push(value);}for(_i5=0,_Object$entries5=Object.entries(Data.deaths);_i5<_Object$entries5.length;_i5++){_Object$entries5$_i=_slicedToArray(_Object$entries5[_i5],2),_key3=_Object$entries5$_i[0],_value3=_Object$entries5$_i[1];Deaths.push(_value3);}for(_i6=0,_Object$entries6=Object.entries(Data.recovered);_i6<_Object$entries6.length;_i6++){_Object$entries6$_i=_slicedToArray(_Object$entries6[_i6],2),_key4=_Object$entries6$_i[0],_value4=_Object$entries6$_i[1];Recovered.push(_value4);}if(Dates.length>0&&Cases.length>0&&Deaths.length>0&&Recovered.length>0){dispatch({type:GET_WW_DATA_HISTORY,payload:{Data:Data,Dates:Dates,Cases:Cases,Deaths:Deaths,Recovered:Recovered}});}case 21:_context2.next=26;break;case 23:_context2.prev=23;_context2.t0=_context2[\"catch\"](5);dispatch({type:SET_HiSTORY_CURRENT_COUNTRY_ERROR,payload:_context2.t0.message});case 26:case\"end\":return _context2.stop();}}},_callee2,null,[[5,23]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var clearCurrentHistory=function clearCurrentHistory(){return{type:CLEAR_CURRENT_COUNTRY};};export var setLoading=function setLoading(){return{type:SET_HiSTORY_CURRENT_COUNTRY_LOADING};};","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Actions/DataHistory.js"],"names":["GET_HiSTORY_CURRENT_COUNTRY","GET_WW_DATA_HISTORY","CLEAR_CURRENT_COUNTRY","SET_HiSTORY_CURRENT_COUNTRY_LOADING","SET_HiSTORY_CURRENT_COUNTRY_ERROR","baseUrl","process","env","NODE_ENV","REACT_APP_BASE_URL","BASE_URL","getCurrentHistory","country","dispatch","Dates","Cases","Deaths","Recovered","setLoading","fetch","res","ok","type","payload","status","Error","json","Data","Object","entries","timeline","cases","key","value","newDate","split","push","deaths","recovered","length","message","getWWHistory","clearCurrentHistory"],"mappings":"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","sourcesContent":["import {\r\n  GET_HiSTORY_CURRENT_COUNTRY,\r\n  GET_WW_DATA_HISTORY,\r\n  CLEAR_CURRENT_COUNTRY,\r\n  SET_HiSTORY_CURRENT_COUNTRY_LOADING,\r\n  SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n} from \"./Types\";\r\n\r\nlet baseUrl;\r\nprocess.env.NODE_ENV\r\n  ? (baseUrl = process.env.REACT_APP_BASE_URL)\r\n  : (baseUrl = process.env.BASE_URL);\r\n\r\nexport const getCurrentHistory = (country) => async (dispatch) => {\r\n  let Dates = [];\r\n  let Cases = [];\r\n  let Deaths = [];\r\n  let Recovered = [];\r\n\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(\r\n      `https://corona.lmao.ninja/v2/historical/${country}`,\r\n    );\r\n    if (!res.ok) {\r\n      dispatch({\r\n        type: SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n        payload: `HTTP Status: ${res.status}`,\r\n      });\r\n      throw new Error(`HTTP Status: ${res.status}`);\r\n    } else {\r\n      const Data = await res.json();\r\n      for (let [key, value] of Object.entries(Data.timeline.cases)) {\r\n        let newDate = key.split(\"/\");\r\n        Dates.push(`${newDate[1]}/${newDate[0]}`);\r\n        Cases.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.timeline.deaths)) {\r\n        Deaths.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.timeline.recovered)) {\r\n        Recovered.push(value);\r\n      }\r\n      if (\r\n        Dates.length > 0 &&\r\n        Cases.length > 0 &&\r\n        Deaths.length > 0 &&\r\n        Recovered.length > 0\r\n      ) {\r\n        dispatch({\r\n          type: GET_HiSTORY_CURRENT_COUNTRY,\r\n          payload: { Data, Dates, Cases, Deaths, Recovered },\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: SET_HiSTORY_CURRENT_COUNTRY_ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const getWWHistory = () => async (dispatch) => {\r\n  let Dates = [];\r\n  let Cases = [];\r\n  let Deaths = [];\r\n  let Recovered = [];\r\n\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(`${baseUrl}v2/historical/all`);\r\n    if (!res.ok) {\r\n      dispatch({\r\n        type: SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n        payload: `HTTP Status: ${res.status}`,\r\n      });\r\n      throw new Error(`HTTP Status: ${res.status}`);\r\n    } else {\r\n      const Data = await res.json();\r\n      for (let [key, value] of Object.entries(Data.cases)) {\r\n        let newDate = key.split(\"/\");\r\n        Dates.push(`${newDate[1]}/${newDate[0]}`);\r\n        Cases.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.deaths)) {\r\n        Deaths.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.recovered)) {\r\n        Recovered.push(value);\r\n      }\r\n      if (\r\n        Dates.length > 0 &&\r\n        Cases.length > 0 &&\r\n        Deaths.length > 0 &&\r\n        Recovered.length > 0\r\n      ) {\r\n        dispatch({\r\n          type: GET_WW_DATA_HISTORY,\r\n          payload: { Data, Dates, Cases, Deaths, Recovered },\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: SET_HiSTORY_CURRENT_COUNTRY_ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const clearCurrentHistory = () => {\r\n  return { type: CLEAR_CURRENT_COUNTRY };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_HiSTORY_CURRENT_COUNTRY_LOADING };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}