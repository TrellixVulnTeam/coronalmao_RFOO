{"ast":null,"code":"import React from'react';import Child from'./WWStatsChild';import{connect}from'react-redux';import Spinner from'react-bootstrap/Spinner';import PropTypes from'prop-types';var WWStats=function WWStats(_ref){var _ref$AllCountriesData=_ref.AllCountriesData,WWStats=_ref$AllCountriesData.WWStats,allCountriesloading=_ref$AllCountriesData.allCountriesloading,currentCountry=_ref.CurrentCountryData.currentCountry;var _ref2=WWStats||{},updated=_ref2.updated,cases=_ref2.cases,todayCases=_ref2.todayCases,deaths=_ref2.deaths,todayDeaths=_ref2.todayDeaths,recovered=_ref2.recovered,tests=_ref2.tests;return/*#__PURE__*/React.createElement(\"div\",{className:\"WWStats\"},WWStats===null||allCountriesloading?/*#__PURE__*/React.createElement(\"div\",{className:\"Spinner\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"success\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))):currentCountry===null||allCountriesloading?/*#__PURE__*/React.createElement(Child,{cases:cases,todayCases:todayCases,deaths:deaths,todayDeaths:todayDeaths,recovered:recovered,tests:tests,updated:updated}):/*#__PURE__*/React.createElement(Child,{country:currentCountry.country,flag:currentCountry.flag,cases:currentCountry.cases,todayCases:currentCountry.todayCases,deaths:currentCountry.deaths,todayDeaths:currentCountry.todayDeaths,recovered:currentCountry.recovered,tests:currentCountry.tests,updated:currentCountry.updated}));};WWStats.prototype={WWStats:PropTypes.object,allCountriesloading:PropTypes.bool,currentCountry:PropTypes.object};var mapStateToProps=function mapStateToProps(state){return{AllCountriesData:state.AllCountries,CurrentCountryData:state.CurrentCountryData};};export default connect(mapStateToProps)(WWStats);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/MidSection/WWStats.jsx"],"names":["React","Child","connect","Spinner","PropTypes","WWStats","AllCountriesData","allCountriesloading","currentCountry","CurrentCountryData","updated","cases","todayCases","deaths","todayDeaths","recovered","tests","country","flag","prototype","object","bool","mapStateToProps","state","AllCountries"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAG,sBAGV,gCAFJC,gBAEI,CAFgBD,OAEhB,uBAFgBA,OAEhB,CAFyBE,mBAEzB,uBAFyBA,mBAEzB,CADkBC,cAClB,MADJC,kBACI,CADkBD,cAClB,WAEFH,OAAO,EAAI,EAFT,CACIK,OADJ,OACIA,OADJ,CACaC,KADb,OACaA,KADb,CACoBC,UADpB,OACoBA,UADpB,CACgCC,MADhC,OACgCA,MADhC,CACwCC,WADxC,OACwCA,WADxC,CACqDC,SADrD,OACqDA,SADrD,CACgEC,KADhE,OACgEA,KADhE,CAIJ,mBACE,2BAAK,SAAS,CAAC,SAAf,EACGX,OAAO,GAAK,IAAZ,EAAoBE,mBAApB,cACC,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,OAAO,CAAC,SAAlD,eACE,4BAAM,SAAS,CAAC,SAAhB,eADF,CADF,CADD,CAMGC,cAAc,GAAK,IAAnB,EAA2BD,mBAA3B,cACF,oBAAC,KAAD,EACE,KAAK,CAAEI,KADT,CAEE,UAAU,CAAEC,UAFd,CAGE,MAAM,CAAEC,MAHV,CAIE,WAAW,CAAEC,WAJf,CAKE,SAAS,CAAEC,SALb,CAME,KAAK,CAAEC,KANT,CAOE,OAAO,CAAEN,OAPX,EADE,cAWF,oBAAC,KAAD,EACE,OAAO,CAAEF,cAAc,CAACS,OAD1B,CAEE,IAAI,CAAET,cAAc,CAACU,IAFvB,CAGE,KAAK,CAAEV,cAAc,CAACG,KAHxB,CAIE,UAAU,CAAEH,cAAc,CAACI,UAJ7B,CAKE,MAAM,CAAEJ,cAAc,CAACK,MALzB,CAME,WAAW,CAAEL,cAAc,CAACM,WAN9B,CAOE,SAAS,CAAEN,cAAc,CAACO,SAP5B,CAQE,KAAK,CAAEP,cAAc,CAACQ,KARxB,CASE,OAAO,CAAER,cAAc,CAACE,OAT1B,EAlBJ,CADF,CAiCD,CAxCD,CA0CAL,OAAO,CAACc,SAAR,CAAoB,CAClBd,OAAO,CAAED,SAAS,CAACgB,MADD,CAElBb,mBAAmB,CAAEH,SAAS,CAACiB,IAFb,CAGlBb,cAAc,CAAEJ,SAAS,CAACgB,MAHR,CAApB,CAMA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCjB,gBAAgB,CAAEiB,KAAK,CAACC,YADQ,CAEhCf,kBAAkB,CAAEc,KAAK,CAACd,kBAFM,CAAL,EAA7B,CAKA,cAAeP,CAAAA,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,OAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport Child from './WWStatsChild';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WWStats = ({\r\n  AllCountriesData: { WWStats, allCountriesloading },\r\n  CurrentCountryData: { currentCountry }\r\n}) => {\r\n  const { updated, cases, todayCases, deaths, todayDeaths, recovered, tests } =\r\n    WWStats || {};\r\n\r\n  return (\r\n    <div className='WWStats'>\r\n      {WWStats === null || allCountriesloading ? (\r\n        <div className='Spinner'>\r\n          <Spinner animation='border' role='status' variant='success'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : currentCountry === null || allCountriesloading ? (\r\n        <Child\r\n          cases={cases}\r\n          todayCases={todayCases}\r\n          deaths={deaths}\r\n          todayDeaths={todayDeaths}\r\n          recovered={recovered}\r\n          tests={tests}\r\n          updated={updated}\r\n        />\r\n      ) : (\r\n        <Child\r\n          country={currentCountry.country}\r\n          flag={currentCountry.flag}\r\n          cases={currentCountry.cases}\r\n          todayCases={currentCountry.todayCases}\r\n          deaths={currentCountry.deaths}\r\n          todayDeaths={currentCountry.todayDeaths}\r\n          recovered={currentCountry.recovered}\r\n          tests={currentCountry.tests}\r\n          updated={currentCountry.updated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nWWStats.prototype = {\r\n  WWStats: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n  currentCountry: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  AllCountriesData: state.AllCountries,\r\n  CurrentCountryData: state.CurrentCountryData\r\n});\r\n\r\nexport default connect(mapStateToProps)(WWStats);\r\n"]},"metadata":{},"sourceType":"module"}