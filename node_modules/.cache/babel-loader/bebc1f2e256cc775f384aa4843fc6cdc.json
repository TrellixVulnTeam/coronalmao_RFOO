{"ast":null,"code":"import _slicedToArray from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import PieChartItem from\"./pieChartItem\";import{connect}from\"react-redux\";import Spinner from\"react-bootstrap/Spinner\";var PieChart=function PieChart(_ref){var _ref$AllCountriesData=_ref.AllCountriesData,WWStats=_ref$AllCountriesData.WWStats,allCountriesloading=_ref$AllCountriesData.allCountriesloading,currentCountry=_ref.CurrentCountryData.currentCountry;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),getDatas=_useState2[0],setDatas=_useState2[1];useEffect(function(){if(currentCountry){setDatas({Cases:currentCountry.cases,Deaths:currentCountry.deaths,Recovered:currentCountry.recovered});}else if(WWStats){setDatas({Cases:WWStats.cases,Deaths:WWStats.deaths,Recovered:WWStats.recovered});}},[WWStats,currentCountry]);return/*#__PURE__*/React.createElement(React.Fragment,null,!getDatas||allCountriesloading?/*#__PURE__*/React.createElement(\"div\",{className:\"Spinner\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"success\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))):/*#__PURE__*/React.createElement(PieChartItem,{Cases:getDatas.Cases,Deaths:getDatas.Deaths,Recovered:getDatas.Recovered}));};var mapStateToProps=function mapStateToProps(state){return{AllCountriesData:state.AllCountries,CurrentCountryData:state.CurrentCountryData};};export default connect(mapStateToProps)(PieChart);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/pieChart.jsx"],"names":["React","useEffect","useState","PieChartItem","connect","Spinner","PieChart","AllCountriesData","WWStats","allCountriesloading","currentCountry","CurrentCountryData","getDatas","setDatas","Cases","cases","Deaths","deaths","Recovered","recovered","mapStateToProps","state","AllCountries"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAGX,gCAFJC,gBAEI,CAFgBC,OAEhB,uBAFgBA,OAEhB,CAFyBC,mBAEzB,uBAFyBA,mBAEzB,CADkBC,cAClB,MADJC,kBACI,CADkBD,cAClB,eACyBR,QAAQ,CAAC,IAAD,CADjC,wCACGU,QADH,eACaC,QADb,eAEJZ,SAAS,CAAC,UAAM,CACd,GAAIS,cAAJ,CAAoB,CAClBG,QAAQ,CAAC,CACPC,KAAK,CAAEJ,cAAc,CAACK,KADf,CAEPC,MAAM,CAAEN,cAAc,CAACO,MAFhB,CAGPC,SAAS,CAAER,cAAc,CAACS,SAHnB,CAAD,CAAR,CAKD,CAND,IAMO,IAAIX,OAAJ,CAAa,CAClBK,QAAQ,CAAC,CACPC,KAAK,CAAEN,OAAO,CAACO,KADR,CAEPC,MAAM,CAAER,OAAO,CAACS,MAFT,CAGPC,SAAS,CAAEV,OAAO,CAACW,SAHZ,CAAD,CAAR,CAKD,CACF,CAdQ,CAcN,CAACX,OAAD,CAAUE,cAAV,CAdM,CAAT,CAgBA,mBACE,wCACG,CAACE,QAAD,EAAaH,mBAAb,cACC,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,OAAO,CAAC,SAAlD,eACE,4BAAM,SAAS,CAAC,SAAhB,eADF,CADF,CADD,cAOC,oBAAC,YAAD,EACE,KAAK,CAAEG,QAAQ,CAACE,KADlB,CAEE,MAAM,CAAEF,QAAQ,CAACI,MAFnB,CAGE,SAAS,CAAEJ,QAAQ,CAACM,SAHtB,EARJ,CADF,CAiBD,CAtCD,CA8CA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCd,gBAAgB,CAAEc,KAAK,CAACC,YADU,CAElCX,kBAAkB,CAAEU,KAAK,CAACV,kBAFQ,CAAZ,EAAxB,CAKA,cAAeP,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PieChartItem from \"./pieChartItem\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PieChart = ({\r\n  AllCountriesData: { WWStats, allCountriesloading },\r\n  CurrentCountryData: { currentCountry },\r\n}) => {\r\n  const [getDatas, setDatas] = useState(null);\r\n  useEffect(() => {\r\n    if (currentCountry) {\r\n      setDatas({\r\n        Cases: currentCountry.cases,\r\n        Deaths: currentCountry.deaths,\r\n        Recovered: currentCountry.recovered,\r\n      });\r\n    } else if (WWStats) {\r\n      setDatas({\r\n        Cases: WWStats.cases,\r\n        Deaths: WWStats.deaths,\r\n        Recovered: WWStats.recovered,\r\n      });\r\n    }\r\n  }, [WWStats, currentCountry]);\r\n\r\n  return (\r\n    <>\r\n      {!getDatas || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <PieChartItem\r\n          Cases={getDatas.Cases}\r\n          Deaths={getDatas.Deaths}\r\n          Recovered={getDatas.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  WWStats: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n  currentCountry: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  AllCountriesData: state.AllCountries,\r\n  CurrentCountryData: state.CurrentCountryData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChart);\r\n"]},"metadata":{},"sourceType":"module"}