{"ast":null,"code":"import _slicedToArray from\"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import LineChartItem from'./LineChartItem';import{connect}from'react-redux';import Spinner from'react-bootstrap/Spinner';var LineChart=function LineChart(_ref){var _ref$DataHistory=_ref.DataHistory,Dates=_ref$DataHistory.Dates,WWDates=_ref$DataHistory.WWDates,Cases=_ref$DataHistory.Cases,WWCases=_ref$DataHistory.WWCases,Deaths=_ref$DataHistory.Deaths,WWDeaths=_ref$DataHistory.WWDeaths,Recovered=_ref$DataHistory.Recovered,WWRecovered=_ref$DataHistory.WWRecovered,currentCountryLoading=_ref$DataHistory.currentCountryLoading;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),DataHistory=_useState2[0],setDataHistory=_useState2[1];useEffect(function(){WWDates&&!Dates?setDataHistory({Dates:WWDates,Cases:WWCases,Deaths:WWDeaths,Recovered:WWRecovered}):setDataHistory({Dates:Dates,Cases:Cases,Deaths:Deaths,Recovered:Recovered});// eslint-disable-next-line\n},[WWDates,Dates]);return/*#__PURE__*/React.createElement(React.Fragment,null,!WWDates&&!WWCases&&!WWDeaths&&!WWRecovered||currentCountryLoading?/*#__PURE__*/React.createElement(\"div\",{className:\"Spinner\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"success\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))):/*#__PURE__*/React.createElement(LineChartItem,{Dates:DataHistory.Dates,Cases:DataHistory.Cases,Deaths:DataHistory.Deaths,Recovered:DataHistory.Recovered}));};var mapStateToProps=function mapStateToProps(state){return{DataHistory:state.DataHistory};};export default connect(mapStateToProps)(LineChart);","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/LineChart.jsx"],"names":["React","useEffect","useState","LineChartItem","connect","Spinner","LineChart","DataHistory","Dates","WWDates","Cases","WWCases","Deaths","WWDeaths","Recovered","WWRecovered","currentCountryLoading","setDataHistory","mapStateToProps","state"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAYZ,2BAXJC,WAWI,CAVFC,KAUE,kBAVFA,KAUE,CATFC,OASE,kBATFA,OASE,CARFC,KAQE,kBARFA,KAQE,CAPFC,OAOE,kBAPFA,OAOE,CANFC,MAME,kBANFA,MAME,CALFC,QAKE,kBALFA,QAKE,CAJFC,SAIE,kBAJFA,SAIE,CAHFC,WAGE,kBAHFA,WAGE,CAFFC,qBAEE,kBAFFA,qBAEE,eACkCd,QAAQ,CAAC,IAAD,CAD1C,wCACGK,WADH,eACgBU,cADhB,eAGJhB,SAAS,CAAC,UAAM,CACdQ,OAAO,EAAI,CAACD,KAAZ,CACIS,cAAc,CAAC,CACbT,KAAK,CAAEC,OADM,CAEbC,KAAK,CAAEC,OAFM,CAGbC,MAAM,CAAEC,QAHK,CAIbC,SAAS,CAAEC,WAJE,CAAD,CADlB,CAOIE,cAAc,CAAC,CACbT,KAAK,CAALA,KADa,CAEbE,KAAK,CAALA,KAFa,CAGbE,MAAM,CAANA,MAHa,CAIbE,SAAS,CAATA,SAJa,CAAD,CAPlB,CAaA;AACD,CAfQ,CAeN,CAACL,OAAD,CAAUD,KAAV,CAfM,CAAT,CAiBA,mBACE,wCACI,CAACC,OAAD,EAAY,CAACE,OAAb,EAAwB,CAACE,QAAzB,EAAqC,CAACE,WAAvC,EACDC,qBADC,cAEC,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,OAAO,CAAC,SAAlD,eACE,4BAAM,SAAS,CAAC,SAAhB,eADF,CADF,CAFD,cAQC,oBAAC,aAAD,EACE,KAAK,CAAET,WAAW,CAACC,KADrB,CAEE,KAAK,CAAED,WAAW,CAACG,KAFrB,CAGE,MAAM,CAAEH,WAAW,CAACK,MAHtB,CAIE,SAAS,CAAEL,WAAW,CAACO,SAJzB,EATJ,CADF,CAmBD,CAnDD,CAgEA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCZ,WAAW,CAAEY,KAAK,CAACZ,WADa,CAAL,EAA7B,CAIA,cAAeH,CAAAA,OAAO,CAACc,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport LineChartItem from './LineChartItem';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LineChart = ({\r\n  DataHistory: {\r\n    Dates,\r\n    WWDates,\r\n    Cases,\r\n    WWCases,\r\n    Deaths,\r\n    WWDeaths,\r\n    Recovered,\r\n    WWRecovered,\r\n    currentCountryLoading\r\n  }\r\n}) => {\r\n  const [DataHistory, setDataHistory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    WWDates && !Dates\r\n      ? setDataHistory({\r\n          Dates: WWDates,\r\n          Cases: WWCases,\r\n          Deaths: WWDeaths,\r\n          Recovered: WWRecovered\r\n        })\r\n      : setDataHistory({\r\n          Dates,\r\n          Cases,\r\n          Deaths,\r\n          Recovered\r\n        });\r\n    // eslint-disable-next-line\r\n  }, [WWDates, Dates]);\r\n\r\n  return (\r\n    <>\r\n      {(!WWDates && !WWCases && !WWDeaths && !WWRecovered) ||\r\n      currentCountryLoading ? (\r\n        <div className='Spinner'>\r\n          <Spinner animation='border' role='status' variant='success'>\r\n            <span className='sr-only'>Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <LineChartItem\r\n          Dates={DataHistory.Dates}\r\n          Cases={DataHistory.Cases}\r\n          Deaths={DataHistory.Deaths}\r\n          Recovered={DataHistory.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLineChart.propTypes = {\r\n  WWDates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  WWCases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  WWDeaths: PropTypes.array,\r\n  Recovered: PropTypes.array,\r\n  WWRecovered: PropTypes.array,\r\n  currentCountryLoading: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  DataHistory: state.DataHistory\r\n});\r\n\r\nexport default connect(mapStateToProps)(LineChart);\r\n"]},"metadata":{},"sourceType":"module"}