{"ast":null,"code":"import { GET_HiSTORY_CURRENT_COUNTRY, GET_WW_DATA_HISTORY, CLEAR_CURRENT_COUNTRY, SET_HiSTORY_CURRENT_COUNTRY_LOADING, SET_HiSTORY_CURRENT_COUNTRY_ERROR } from '../Actions/Types';\nconst initialState = {\n  currentCountryHistory: null,\n  Dates: null,\n  Cases: null,\n  Deaths: null,\n  Recovered: null,\n  WWDataHistory: null,\n  WWDates: null,\n  WWCases: null,\n  WWDeaths: null,\n  WWRecovered: null,\n  currentCountryLoading: false,\n  currentCountryError: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_HiSTORY_CURRENT_COUNTRY:\n      return { ...state,\n        currentCountryHistory: action.payload.Data,\n        Dates: action.payload.Dates,\n        Cases: action.payload.Cases,\n        Deaths: action.payload.Deaths,\n        Recovered: action.payload.Recovered,\n        currentCountryLoading: false\n      };\n\n    case GET_WW_DATA_HISTORY:\n      return { ...state,\n        WWDataHistory: action.payload.Data,\n        WWDates: action.payload.Dates,\n        WWCases: action.payload.Cases,\n        WWDeaths: action.payload.Deaths,\n        WWRecovered: action.payload.Recovered,\n        currentCountryLoading: false\n      };\n\n    case CLEAR_CURRENT_COUNTRY:\n      return { ...state,\n        currentCountryHistory: null,\n        Dates: null,\n        Cases: null,\n        Deaths: null,\n        Recovered: null\n      };\n\n    case SET_HiSTORY_CURRENT_COUNTRY_LOADING:\n      return { ...state,\n        currentCountryLoading: true\n      };\n\n    case SET_HiSTORY_CURRENT_COUNTRY_ERROR:\n      return { ...state,\n        currentCountryError: action.payload,\n        currentCountryLoading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Reducers/DataHistory.js"],"names":["GET_HiSTORY_CURRENT_COUNTRY","GET_WW_DATA_HISTORY","CLEAR_CURRENT_COUNTRY","SET_HiSTORY_CURRENT_COUNTRY_LOADING","SET_HiSTORY_CURRENT_COUNTRY_ERROR","initialState","currentCountryHistory","Dates","Cases","Deaths","Recovered","WWDataHistory","WWDates","WWCases","WWDeaths","WWRecovered","currentCountryLoading","currentCountryError","state","action","type","payload","Data"],"mappings":"AAAA,SACEA,2BADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,mCAJF,EAKEC,iCALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,qBAAqB,EAAE,IADJ;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,SAAS,EAAE,IALQ;AAMnBC,EAAAA,aAAa,EAAE,IANI;AAOnBC,EAAAA,OAAO,EAAE,IAPU;AAQnBC,EAAAA,OAAO,EAAE,IARU;AASnBC,EAAAA,QAAQ,EAAE,IATS;AAUnBC,EAAAA,WAAW,EAAE,IAVM;AAWnBC,EAAAA,qBAAqB,EAAE,KAXJ;AAYnBC,EAAAA,mBAAmB,EAAE;AAZF,CAArB;AAeA,gBAAe,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,2BAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELZ,QAAAA,qBAAqB,EAAEa,MAAM,CAACE,OAAP,CAAeC,IAFjC;AAGLf,QAAAA,KAAK,EAAEY,MAAM,CAACE,OAAP,CAAed,KAHjB;AAILC,QAAAA,KAAK,EAAEW,MAAM,CAACE,OAAP,CAAeb,KAJjB;AAKLC,QAAAA,MAAM,EAAEU,MAAM,CAACE,OAAP,CAAeZ,MALlB;AAMLC,QAAAA,SAAS,EAAES,MAAM,CAACE,OAAP,CAAeX,SANrB;AAOLM,QAAAA,qBAAqB,EAAE;AAPlB,OAAP;;AASF,SAAKf,mBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELP,QAAAA,aAAa,EAAEQ,MAAM,CAACE,OAAP,CAAeC,IAFzB;AAGLV,QAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAed,KAHnB;AAILM,QAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeb,KAJnB;AAKLM,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeZ,MALpB;AAMLM,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeX,SANvB;AAOLM,QAAAA,qBAAqB,EAAE;AAPlB,OAAP;;AASF,SAAKd,qBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELZ,QAAAA,qBAAqB,EAAE,IAFlB;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,MAAM,EAAE,IALH;AAMLC,QAAAA,SAAS,EAAE;AANN,OAAP;;AAQF,SAAKP,mCAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYF,QAAAA,qBAAqB,EAAE;AAAnC,OAAP;;AAEF,SAAKZ,iCAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,mBAAmB,EAAEE,MAAM,CAACE,OAFvB;AAGLL,QAAAA,qBAAqB,EAAE;AAHlB,OAAP;;AAMF;AACE,aAAOE,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import {\r\n  GET_HiSTORY_CURRENT_COUNTRY,\r\n  GET_WW_DATA_HISTORY,\r\n  CLEAR_CURRENT_COUNTRY,\r\n  SET_HiSTORY_CURRENT_COUNTRY_LOADING,\r\n  SET_HiSTORY_CURRENT_COUNTRY_ERROR\r\n} from '../Actions/Types';\r\n\r\nconst initialState = {\r\n  currentCountryHistory: null,\r\n  Dates: null,\r\n  Cases: null,\r\n  Deaths: null,\r\n  Recovered: null,\r\n  WWDataHistory: null,\r\n  WWDates: null,\r\n  WWCases: null,\r\n  WWDeaths: null,\r\n  WWRecovered: null,\r\n  currentCountryLoading: false,\r\n  currentCountryError: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HiSTORY_CURRENT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        currentCountryHistory: action.payload.Data,\r\n        Dates: action.payload.Dates,\r\n        Cases: action.payload.Cases,\r\n        Deaths: action.payload.Deaths,\r\n        Recovered: action.payload.Recovered,\r\n        currentCountryLoading: false\r\n      };\r\n    case GET_WW_DATA_HISTORY:\r\n      return {\r\n        ...state,\r\n        WWDataHistory: action.payload.Data,\r\n        WWDates: action.payload.Dates,\r\n        WWCases: action.payload.Cases,\r\n        WWDeaths: action.payload.Deaths,\r\n        WWRecovered: action.payload.Recovered,\r\n        currentCountryLoading: false\r\n      };\r\n    case CLEAR_CURRENT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        currentCountryHistory: null,\r\n        Dates: null,\r\n        Cases: null,\r\n        Deaths: null,\r\n        Recovered: null\r\n      };\r\n    case SET_HiSTORY_CURRENT_COUNTRY_LOADING:\r\n      return { ...state, currentCountryLoading: true };\r\n\r\n    case SET_HiSTORY_CURRENT_COUNTRY_ERROR:\r\n      return {\r\n        ...state,\r\n        currentCountryError: action.payload,\r\n        currentCountryLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}