{"ast":null,"code":"var _jsxFileName = \"/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/BarChartItem.jsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nconst BarChartItem = ({\n  Dates,\n  Cases,\n  Deaths,\n  Recovered\n}) => {\n  return /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: Dates,\n      datasets: [{\n        label: 'Cases',\n        data: Cases,\n        fill: false,\n        backgroundColor: '#fca903'\n      }, {\n        label: 'Deaths',\n        data: Deaths,\n        fill: false,\n        backgroundColor: '#d14356'\n      }, {\n        label: 'Recovered',\n        data: Recovered,\n        fill: false,\n        backgroundColor: '#49d170'\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          usePointStyle: true,\n          fontColor: '#8a8a8a'\n        }\n      },\n      tooltips: {\n        enabled: true,\n        backgroundColor: '#ededed',\n        borderWidth: '2',\n        borderColor: '#8a8a8a',\n        titleFontColor: '#4a4a4a',\n        bodyFontColor: '#4a4a4a',\n        callbacks: {\n          label: (tooltipItem, data) => {\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n            if (label) {\n              label += ': ';\n            }\n\n            label += Math.round(tooltipItem.yLabel * 100) / 100;\n            return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n          }\n        }\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            fontSize: 10,\n            fontColor: '#2e2e2e'\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            fontColor: '#2e2e2e'\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  });\n};\n\nBarChartItem.propTypes = {\n  Dates: PropTypes.array,\n  Cases: PropTypes.array,\n  Deaths: PropTypes.array,\n  Recovered: PropTypes.array\n};\nexport default BarChartItem;","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/BarChartItem.jsx"],"names":["React","Bar","PropTypes","BarChartItem","Dates","Cases","Deaths","Recovered","labels","datasets","label","data","fill","backgroundColor","responsive","maintainAspectRatio","legend","display","position","usePointStyle","fontColor","tooltips","enabled","borderWidth","borderColor","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","toString","replace","scales","xAxes","gridLines","ticks","fontSize","yAxes","beginAtZero","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BarChartItem = ({ Dates, Cases, Deaths, Recovered }) => {\r\n  return (\r\n    <Bar\r\n      data={{\r\n        labels: Dates,\r\n        datasets: [\r\n          {\r\n            label: 'Cases',\r\n            data: Cases,\r\n            fill: false,\r\n            backgroundColor: '#fca903'\r\n          },\r\n          {\r\n            label: 'Deaths',\r\n            data: Deaths,\r\n            fill: false,\r\n            backgroundColor: '#d14356'\r\n          },\r\n          {\r\n            label: 'Recovered',\r\n            data: Recovered,\r\n            fill: false,\r\n            backgroundColor: '#49d170'\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            fontColor: '#8a8a8a'\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          backgroundColor: '#ededed',\r\n          borderWidth: '2',\r\n          borderColor: '#8a8a8a',\r\n          titleFontColor: '#4a4a4a',\r\n          bodyFontColor: '#4a4a4a',\r\n          callbacks: {\r\n            label: (tooltipItem, data) => {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n              return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: {\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nBarChartItem.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array\r\n};\r\n\r\nexport default BarChartItem;\r\n"]},"metadata":{},"sourceType":"module"}