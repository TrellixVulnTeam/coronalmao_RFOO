{"ast":null,"code":"import React from'react';import{Bar}from'react-chartjs-2';var BarChartItem=function BarChartItem(_ref){var Dates=_ref.Dates,Cases=_ref.Cases,Deaths=_ref.Deaths,Recovered=_ref.Recovered;return/*#__PURE__*/React.createElement(Bar,{data:{labels:Dates,datasets:[{label:'Cases',data:Cases,fill:false,backgroundColor:'#fca903'},{label:'Deaths',data:Deaths,fill:false,backgroundColor:'#d14356'},{label:'Recovered',data:Recovered,fill:false,backgroundColor:'#49d170'}]},options:{responsive:true,maintainAspectRatio:false,legend:{display:true,position:'bottom',labels:{usePointStyle:true,fontColor:'#8a8a8a'}},tooltips:{enabled:true,backgroundColor:'#ededed',borderWidth:'2',borderColor:'#8a8a8a',titleFontColor:'#4a4a4a',bodyFontColor:'#4a4a4a',callbacks:{label:function label(tooltipItem,data){var label=data.datasets[tooltipItem.datasetIndex].label||'';if(label){label+=': ';}label+=Math.round(tooltipItem.yLabel*100)/100;return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,'$1,');}}},scales:{xAxes:[{gridLines:{display:false},ticks:{fontSize:10,fontColor:'#2e2e2e'}}],yAxes:[{gridLines:{display:true},ticks:{beginAtZero:true,fontSize:10,fontColor:'#2e2e2e'}}]}}});};export default BarChartItem;","map":{"version":3,"sources":["/Users/lamhungpok/Projects/coding-projects/COVID19-Tracker/src/Components/Charts/BarChartItem.jsx"],"names":["React","Bar","BarChartItem","Dates","Cases","Deaths","Recovered","labels","datasets","label","data","fill","backgroundColor","responsive","maintainAspectRatio","legend","display","position","usePointStyle","fontColor","tooltips","enabled","borderWidth","borderColor","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","toString","replace","scales","xAxes","gridLines","ticks","fontSize","yAxes","beginAtZero"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,iBAApB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAyC,IAAtCC,CAAAA,KAAsC,MAAtCA,KAAsC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,SAAgB,MAAhBA,SAAgB,CAC5D,mBACE,oBAAC,GAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEJ,KADJ,CAEJK,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,OADT,CAEEC,IAAI,CAAEN,KAFR,CAGEO,IAAI,CAAE,KAHR,CAIEC,eAAe,CAAE,SAJnB,CADQ,CAOR,CACEH,KAAK,CAAE,QADT,CAEEC,IAAI,CAAEL,MAFR,CAGEM,IAAI,CAAE,KAHR,CAIEC,eAAe,CAAE,SAJnB,CAPQ,CAaR,CACEH,KAAK,CAAE,WADT,CAEEC,IAAI,CAAEJ,SAFR,CAGEK,IAAI,CAAE,KAHR,CAIEC,eAAe,CAAE,SAJnB,CAbQ,CAFN,CADR,CAwBE,OAAO,CAAE,CACPC,UAAU,CAAE,IADL,CAEPC,mBAAmB,CAAE,KAFd,CAGPC,MAAM,CAAE,CACNC,OAAO,CAAE,IADH,CAENC,QAAQ,CAAE,QAFJ,CAGNV,MAAM,CAAE,CACNW,aAAa,CAAE,IADT,CAENC,SAAS,CAAE,SAFL,CAHF,CAHD,CAWPC,QAAQ,CAAE,CACRC,OAAO,CAAE,IADD,CAERT,eAAe,CAAE,SAFT,CAGRU,WAAW,CAAE,GAHL,CAIRC,WAAW,CAAE,SAJL,CAKRC,cAAc,CAAE,SALR,CAMRC,aAAa,CAAE,SANP,CAORC,SAAS,CAAE,CACTjB,KAAK,CAAE,eAACkB,WAAD,CAAcjB,IAAd,CAAuB,CAC5B,GAAID,CAAAA,KAAK,CAAGC,IAAI,CAACF,QAAL,CAAcmB,WAAW,CAACC,YAA1B,EAAwCnB,KAAxC,EAAiD,EAA7D,CACA,GAAIA,KAAJ,CAAW,CACTA,KAAK,EAAI,IAAT,CACD,CACDA,KAAK,EAAIoB,IAAI,CAACC,KAAL,CAAWH,WAAW,CAACI,MAAZ,CAAqB,GAAhC,EAAuC,GAAhD,CACA,MAAOtB,CAAAA,KAAK,CAACuB,QAAN,GAAiBC,OAAjB,CAAyB,yBAAzB,CAAoD,KAApD,CAAP,CACD,CARQ,CAPH,CAXH,CA6BPC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,SAAS,CAAE,CACTpB,OAAO,CAAE,KADA,CADb,CAIEqB,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELnB,SAAS,CAAE,SAFN,CAJT,CADK,CADD,CAYNoB,KAAK,CAAE,CACL,CACEH,SAAS,CAAE,CACTpB,OAAO,CAAE,IADA,CADb,CAIEqB,KAAK,CAAE,CACLG,WAAW,CAAE,IADR,CAELF,QAAQ,CAAE,EAFL,CAGLnB,SAAS,CAAE,SAHN,CAJT,CADK,CAZD,CA7BD,CAxBX,EADF,CAkFD,CAnFD,CA4FA,cAAejB,CAAAA,YAAf","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BarChartItem = ({ Dates, Cases, Deaths, Recovered }) => {\r\n  return (\r\n    <Bar\r\n      data={{\r\n        labels: Dates,\r\n        datasets: [\r\n          {\r\n            label: 'Cases',\r\n            data: Cases,\r\n            fill: false,\r\n            backgroundColor: '#fca903'\r\n          },\r\n          {\r\n            label: 'Deaths',\r\n            data: Deaths,\r\n            fill: false,\r\n            backgroundColor: '#d14356'\r\n          },\r\n          {\r\n            label: 'Recovered',\r\n            data: Recovered,\r\n            fill: false,\r\n            backgroundColor: '#49d170'\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            fontColor: '#8a8a8a'\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          backgroundColor: '#ededed',\r\n          borderWidth: '2',\r\n          borderColor: '#8a8a8a',\r\n          titleFontColor: '#4a4a4a',\r\n          bodyFontColor: '#4a4a4a',\r\n          callbacks: {\r\n            label: (tooltipItem, data) => {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n              return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: {\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nBarChartItem.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array\r\n};\r\n\r\nexport default BarChartItem;\r\n"]},"metadata":{},"sourceType":"module"}