{"version":3,"sources":["Assets/images/logo.svg","Reducers/Countries.js","Reducers/CurrentCountry.js","Reducers/DataHistory.js","Reducers/index.js","Actions/Types.js","Actions/Countries.js","Actions/CurrentCountry.js","Actions/DataHistory.js","Components/TopSection/CountriesItem.jsx","Components/TopSection/Countries.jsx","Components/MidSection/ContriesListItem.jsx","Components/MidSection/AllCountriesList.jsx","Components/Map/GlobalMap.jsx","Components/Charts/LineChartItem.jsx","Components/Charts/LineChart.jsx","Components/Charts/BarChartItem.jsx","Components/Charts/BarChart.jsx","Components/Charts/pieChartItem.jsx","Components/Charts/pieChart.jsx","Components/MidSection/WWStatsChild.jsx","Components/MidSection/WWStats.jsx","Components/MidSection/MidSectionContainer.jsx","Layouts/Navbar.jsx","Layouts/Footer.jsx","Pages/Home.jsx","App.jsx","index.jsx"],"names":["module","exports","initialState","allCountriesData","WWStats","allCountriesSortedByCases","allCountriesloading","allCountriesError","currentCountry","currentCountryLoading","currentCountryError","currentCountryHistory","Dates","Cases","Deaths","Recovered","WWDataHistory","WWDates","WWCases","WWDeaths","WWRecovered","combineReducers","AllCountries","state","action","type","payload","allCountries","sortedCountriesByCases","CurrentCountryData","DataHistory","Data","setLoading","CountriesItem","data","props","style","width","textAlign","Option","src","countryInfo","flag","className","alt","country","Countries","AllCountriesData","getAllCountries","WWStatsFetch","setCurrentCountry","getCurrentHistory","getWWHistory","clearCurrentHistory","useEffect","useState","setInputValue","Container","Row","Col","xs","sm","md","lg","xl","Spinner","animation","role","variant","placeholder","options","getOptionLabel","option","getOptionValue","cacheOptions","loadOptions","InputValue","callback","inputValue","filter","c","toLowerCase","includes","filterCountrie","defaultOptions","onInputChange","newValue","replace","onChange","e","updated","lat","long","cases","todayCases","deaths","todayDeaths","recovered","active","critical","tests","components","autoFocus","isClearable","prototype","PropTypes","object","bool","isRequired","func","connect","dispatch","a","fetch","res","ok","status","Error","json","dataFiltered","sort","b","message","Object","entries","timeline","key","value","newDate","split","push","length","ContriesListItem","OverlayTrigger","placement","overlay","Tooltip","id","toString","AllCountriesList","map","array","apiKey","LineChartItem","labels","datasets","label","fill","borderColor","backgroundColor","responsive","maintainAspectRatio","legend","display","position","usePointStyle","fontColor","tooltips","enabled","borderWidth","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","scales","xAxes","gridLines","ticks","fontSize","yAxes","beginAtZero","setDataHistory","BarChartItem","getDateHistory","PieChartItem","dataset","total","reduce","previousValue","currentValue","index","floor","getDatas","setDatas","process","REACT_APP_API_KEY","GlobalMap","height","scrollZoom","boxZoom","doubleClickZoom","viewPort","setViewPort","dragPan","touchAction","dragRotate","touchZoom","touchRotate","keyboard","settings","popupState","setPopupState","latitude","longitude","zoom","transitionDuration","transitionInterpolator","FlyToInterpolator","name","mapboxApiAccessToken","mapStyle","onViewportChange","offsetTop","offsetLeft","onClick","closeButton","onClose","WWStatesChild","moment","fromNow","string","number","MidSectionContainer","fluid","NavComp","Navbar","expand","sticky","delay","show","hide","Brand","logo","Toggle","aria-controls","Collapse","Nav","Link","href","target","window","innerWidth","Footer","nav","showNav","onscroll","scrollY","scrollTo","title","Home","App","middleware","thunk","ReactDOM","render","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","document","getElementById"],"mappings":"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","file":"static/js/main.02d16079.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8172e304.svg\";","import {\r\n  GET_ALL_COUNTRIES,\r\n  GET_WWStats,\r\n  SET_ALL_COUNTRIES_LOADING,\r\n  ERROR\r\n} from '../Actions/Types';\r\n\r\nconst initialState = {\r\n  allCountriesData: null,\r\n  WWStats: null,\r\n  allCountriesSortedByCases: null,\r\n  allCountriesloading: false,\r\n  allCountriesError: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        allCountriesData: action.payload.allCountries,\r\n        allCountriesSortedByCases: action.payload.sortedCountriesByCases,\r\n        allCountriesloading: false\r\n      };\r\n\r\n    case GET_WWStats:\r\n      return { ...state, WWStats: action.payload, allCountriesloading: false };\r\n\r\n    case SET_ALL_COUNTRIES_LOADING:\r\n      return { ...state, allCountriesloading: true };\r\n\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        allCountriesError: action.payload,\r\n        allCountriesloading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_CURRENT_COUNTRY,\r\n  SET_CURRENT_COUNTRY_LOADING,\r\n  SET_CURRENT_COUNTRY_ERROR\r\n} from '../Actions/Types';\r\n\r\nconst initialState = {\r\n  currentCountry: null,\r\n  currentCountryLoading: false,\r\n  currentCountryError: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        currentCountry: action.payload,\r\n        currentCountryLoading: false\r\n      };\r\n\r\n    case SET_CURRENT_COUNTRY_LOADING:\r\n      return { ...state, currentCountryLoading: true };\r\n\r\n    case SET_CURRENT_COUNTRY_ERROR:\r\n      return {\r\n        ...state,\r\n        currentCountryError: action.payload,\r\n        currentCountryLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_HiSTORY_CURRENT_COUNTRY,\r\n  GET_WW_DATA_HISTORY,\r\n  CLEAR_CURRENT_COUNTRY,\r\n  SET_HiSTORY_CURRENT_COUNTRY_LOADING,\r\n  SET_HiSTORY_CURRENT_COUNTRY_ERROR\r\n} from '../Actions/Types';\r\n\r\nconst initialState = {\r\n  currentCountryHistory: null,\r\n  Dates: null,\r\n  Cases: null,\r\n  Deaths: null,\r\n  Recovered: null,\r\n  WWDataHistory: null,\r\n  WWDates: null,\r\n  WWCases: null,\r\n  WWDeaths: null,\r\n  WWRecovered: null,\r\n  currentCountryLoading: false,\r\n  currentCountryError: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HiSTORY_CURRENT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        currentCountryHistory: action.payload.Data,\r\n        Dates: action.payload.Dates,\r\n        Cases: action.payload.Cases,\r\n        Deaths: action.payload.Deaths,\r\n        Recovered: action.payload.Recovered,\r\n        currentCountryLoading: false\r\n      };\r\n    case GET_WW_DATA_HISTORY:\r\n      return {\r\n        ...state,\r\n        WWDataHistory: action.payload.Data,\r\n        WWDates: action.payload.Dates,\r\n        WWCases: action.payload.Cases,\r\n        WWDeaths: action.payload.Deaths,\r\n        WWRecovered: action.payload.Recovered,\r\n        currentCountryLoading: false\r\n      };\r\n    case CLEAR_CURRENT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        currentCountryHistory: null,\r\n        Dates: null,\r\n        Cases: null,\r\n        Deaths: null,\r\n        Recovered: null\r\n      };\r\n    case SET_HiSTORY_CURRENT_COUNTRY_LOADING:\r\n      return { ...state, currentCountryLoading: true };\r\n\r\n    case SET_HiSTORY_CURRENT_COUNTRY_ERROR:\r\n      return {\r\n        ...state,\r\n        currentCountryError: action.payload,\r\n        currentCountryLoading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport AllCountries from './Countries';\r\nimport CurrentCountryData from './CurrentCountry';\r\nimport DataHistory from './DataHistory';\r\n\r\nexport default combineReducers({\r\n  AllCountries,\r\n  CurrentCountryData,\r\n  DataHistory\r\n});\r\n","// Countries\r\nexport const GET_ALL_COUNTRIES = 'GET_ALL_COUNTRIES';\r\nexport const GET_WWStats = 'GET_WWStats';\r\nexport const SET_ALL_COUNTRIES_LOADING = 'SET_ALL_COUNTRIES_LOADING';\r\nexport const ERROR = 'ERROR';\r\n// Current Country\r\nexport const SET_CURRENT_COUNTRY = 'SET_CURRENT_COUNTRY';\r\nexport const SET_CURRENT_COUNTRY_LOADING = 'SET_CURRENT_COUNTRY_LOADING';\r\nexport const SET_CURRENT_COUNTRY_ERROR = 'SET_CURRENT_COUNTRY_ERROR';\r\n// History\r\nexport const GET_HiSTORY_CURRENT_COUNTRY = 'GET_HiSTORY_CURRENT_COUNTRY';\r\nexport const GET_WW_DATA_HISTORY = 'GET_WW_DATA_HISTORY';\r\nexport const CLEAR_CURRENT_COUNTRY = 'CLEAR_CURRENT_COUNTRY';\r\nexport const SET_HiSTORY_CURRENT_COUNTRY_LOADING =\r\n  'SET_HiSTORY_CURRENT_COUNTRY_LOADING';\r\nexport const SET_HiSTORY_CURRENT_COUNTRY_ERROR =\r\n  'SET_HiSTORY_CURRENT_COUNTRY_ERROR';\r\n","import {\r\n  GET_ALL_COUNTRIES,\r\n  GET_WWStats,\r\n  SET_ALL_COUNTRIES_LOADING,\r\n  ERROR,\r\n} from \"./Types\";\r\n\r\nexport const getAllCountries = () => async (dispatch) => {\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(`https://corona.lmao.ninja/v2/countries`);\r\n    if (!res.ok) {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: `HTTP Status: ${res.status}`,\r\n      });\r\n      throw new Error(`HTTP Status: ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    const dataFiltered = data.filter(\r\n      (data) => data.country !== \"Western Sahara\",\r\n    );\r\n    const sortedCountriesByCases = [...dataFiltered].sort((a, b) => {\r\n      return b.cases - a.cases;\r\n    });\r\n    dispatch({\r\n      type: GET_ALL_COUNTRIES,\r\n      payload: { allCountries: dataFiltered, sortedCountriesByCases },\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const WWStatsFetch = () => async (dispatch) => {\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(`https://corona.lmao.ninja/v2/all`);\r\n    dispatch({ type: GET_WWStats, payload: await res.json() });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_ALL_COUNTRIES_LOADING };\r\n};\r\n","import { SET_CURRENT_COUNTRY, SET_CURRENT_COUNTRY_LOADING } from './Types';\r\n\r\nexport const setCurrentCountry = country => {\r\n  setLoading();\r\n  return { type: SET_CURRENT_COUNTRY, payload: country };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_CURRENT_COUNTRY_LOADING };\r\n};\r\n","import {\r\n  GET_HiSTORY_CURRENT_COUNTRY,\r\n  GET_WW_DATA_HISTORY,\r\n  CLEAR_CURRENT_COUNTRY,\r\n  SET_HiSTORY_CURRENT_COUNTRY_LOADING,\r\n  SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n} from \"./Types\";\r\n\r\nexport const getCurrentHistory = (country) => async (dispatch) => {\r\n  let Dates = [];\r\n  let Cases = [];\r\n  let Deaths = [];\r\n  let Recovered = [];\r\n\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(\r\n      `https://corona.lmao.ninja/v2/historical/${country}`,\r\n    );\r\n    if (!res.ok) {\r\n      dispatch({\r\n        type: SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n        payload: `HTTP Status: ${res.status}`,\r\n      });\r\n      throw new Error(`HTTP Status: ${res.status}`);\r\n    } else {\r\n      const Data = await res.json();\r\n      for (let [key, value] of Object.entries(Data.timeline.cases)) {\r\n        let newDate = key.split(\"/\");\r\n        Dates.push(`${newDate[1]}/${newDate[0]}`);\r\n        Cases.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.timeline.deaths)) {\r\n        Deaths.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.timeline.recovered)) {\r\n        Recovered.push(value);\r\n      }\r\n      if (\r\n        Dates.length > 0 &&\r\n        Cases.length > 0 &&\r\n        Deaths.length > 0 &&\r\n        Recovered.length > 0\r\n      ) {\r\n        dispatch({\r\n          type: GET_HiSTORY_CURRENT_COUNTRY,\r\n          payload: { Data, Dates, Cases, Deaths, Recovered },\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: SET_HiSTORY_CURRENT_COUNTRY_ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const getWWHistory = () => async (dispatch) => {\r\n  let Dates = [];\r\n  let Cases = [];\r\n  let Deaths = [];\r\n  let Recovered = [];\r\n\r\n  setLoading();\r\n  try {\r\n    const res = await fetch(`https://corona.lmao.ninja/v2/historical/all`);\r\n    if (!res.ok) {\r\n      dispatch({\r\n        type: SET_HiSTORY_CURRENT_COUNTRY_ERROR,\r\n        payload: `HTTP Status: ${res.status}`,\r\n      });\r\n      throw new Error(`HTTP Status: ${res.status}`);\r\n    } else {\r\n      const Data = await res.json();\r\n      for (let [key, value] of Object.entries(Data.cases)) {\r\n        let newDate = key.split(\"/\");\r\n        Dates.push(`${newDate[1]}/${newDate[0]}`);\r\n        Cases.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.deaths)) {\r\n        Deaths.push(value);\r\n      }\r\n      for (let [key, value] of Object.entries(Data.recovered)) {\r\n        Recovered.push(value);\r\n      }\r\n      if (\r\n        Dates.length > 0 &&\r\n        Cases.length > 0 &&\r\n        Deaths.length > 0 &&\r\n        Recovered.length > 0\r\n      ) {\r\n        dispatch({\r\n          type: GET_WW_DATA_HISTORY,\r\n          payload: { Data, Dates, Cases, Deaths, Recovered },\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: SET_HiSTORY_CURRENT_COUNTRY_ERROR, payload: err.message });\r\n  }\r\n};\r\n\r\nexport const clearCurrentHistory = () => {\r\n  return { type: CLEAR_CURRENT_COUNTRY };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_HiSTORY_CURRENT_COUNTRY_LOADING };\r\n};\r\n","import React from 'react';\r\nimport { components } from 'react-select';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CountriesItem = ({ data, ...props }) => {\r\n  return (\r\n    <div style={{ width: '100% !important', textAlign: 'left !important' }}>\r\n      <components.Option {...props}>\r\n        <img src={data.countryInfo.flag} className='flag' alt={data.country} />\r\n        {data.country}\r\n      </components.Option>\r\n    </div>\r\n  );\r\n};\r\n\r\nCountriesItem.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CountriesItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllCountries, WWStatsFetch } from \"../../Actions/Countries.js\";\r\nimport { setCurrentCountry } from \"../../Actions/CurrentCountry.js\";\r\nimport {\r\n  getCurrentHistory,\r\n  getWWHistory,\r\n  clearCurrentHistory,\r\n} from \"../../Actions/DataHistory.js\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport CountriesItem from \"./CountriesItem.jsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Countries = ({\r\n  AllCountriesData: { allCountriesData, allCountriesloading },\r\n  getAllCountries,\r\n  WWStatsFetch,\r\n  setCurrentCountry,\r\n  getCurrentHistory,\r\n  getWWHistory,\r\n  clearCurrentHistory,\r\n}) => {\r\n  useEffect(() => {\r\n    getAllCountries();\r\n    WWStatsFetch();\r\n    getWWHistory();\r\n  }, [getAllCountries, WWStatsFetch, getWWHistory]);\r\n\r\n  const [, setInputValue] = useState(\"\");\r\n\r\n  const filterCountrie = (inputValue) => {\r\n    if (!allCountriesloading && allCountriesData !== null)\r\n      return allCountriesData.filter((c) =>\r\n        c.country.toLowerCase().includes(inputValue.toLowerCase()),\r\n      );\r\n  };\r\n\r\n  const loadOptions = (InputValue, callback) => {\r\n    callback(filterCountrie(InputValue));\r\n  };\r\n\r\n  const handleInputChange = (newValue) => {\r\n    const inputValue = newValue.replace(/\\W/g, \"\");\r\n    setInputValue({ inputValue });\r\n    return inputValue;\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    if (e !== null) {\r\n      const {\r\n        updated,\r\n        country,\r\n        countryInfo: { flag, lat, long },\r\n        cases,\r\n        todayCases,\r\n        deaths,\r\n        todayDeaths,\r\n        recovered,\r\n        active,\r\n        critical,\r\n        tests,\r\n      } = e;\r\n      // Set Current country\r\n      setCurrentCountry({\r\n        updated,\r\n        country,\r\n        flag,\r\n        lat,\r\n        long,\r\n        cases,\r\n        todayCases,\r\n        deaths,\r\n        todayDeaths,\r\n        recovered,\r\n        active,\r\n        critical,\r\n        tests,\r\n      });\r\n\r\n      getCurrentHistory(country);\r\n    } else {\r\n      setCurrentCountry(null);\r\n      clearCurrentHistory();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n          <div className=\"countriesSection\">\r\n            <div className=\"countriesDopdown\">\r\n              {allCountriesloading || allCountriesData === null ? (\r\n                <div className=\"Spinner\">\r\n                  <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </Spinner>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <AsyncSelect\r\n                    placeholder=\"Search or Select Country ...\"\r\n                    options={allCountriesData}\r\n                    getOptionLabel={(option) => {\r\n                      return (\r\n                        <div>\r\n                          <img\r\n                            src={option.countryInfo.flag}\r\n                            className=\"flag\"\r\n                            alt={option.country}\r\n                          />\r\n                          {`${option.country}`}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                    getOptionValue={(option) => option}\r\n                    cacheOptions\r\n                    loadOptions={loadOptions}\r\n                    defaultOptions\r\n                    onInputChange={handleInputChange}\r\n                    onChange={onChange}\r\n                    components={{ Option: CountriesItem }}\r\n                    className=\"searchBox\"\r\n                    autoFocus={true}\r\n                    isClearable={true}\r\n                    // menuIsOpen={true}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCountries.prototype = {\r\n  allCountriesData: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool.isRequired,\r\n  getAllCountries: PropTypes.func.isRequired,\r\n  setCurrentCountry: PropTypes.func.isRequired,\r\n  WWStatsFetch: PropTypes.func.isRequired,\r\n  getCurrentHistory: PropTypes.func.isRequired,\r\n  getWWHistory: PropTypes.func.isRequired,\r\n  clearCurrentHistory: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  AllCountriesData: state.AllCountries,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllCountries,\r\n  WWStatsFetch,\r\n  setCurrentCountry,\r\n  getCurrentHistory,\r\n  getWWHistory,\r\n  clearCurrentHistory,\r\n})(Countries);\r\n","import React from 'react';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContriesListItem = ({\r\n  country: {\r\n    country,\r\n    countryInfo: { flag },\r\n    cases,\r\n    todayCases,\r\n    deaths,\r\n    todayDeaths,\r\n    recovered,\r\n    tests\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='CountryListItem'>\r\n      <div className='flagAndTitle'>\r\n        <img src={flag} alt={country} />\r\n        <p className='CountryName'>{country}</p>\r\n      </div>\r\n\r\n      <div className='CDR'>\r\n        <OverlayTrigger\r\n          key='Cases'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Cases\r\n            </Tooltip>\r\n          }>\r\n          <div className='Cases'>\r\n            <i className='fas fa-users'></i>\r\n            {cases !== null\r\n              ? cases.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n              : 0}\r\n            {todayCases !== null && (\r\n              <span className='todayResults'>\r\n                +\r\n                {todayCases\r\n                  .toString()\r\n                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Deaths'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Deaths\r\n            </Tooltip>\r\n          }>\r\n          <div className='Deaths'>\r\n            <i className='fas fa-skull'></i>\r\n            {deaths !== null\r\n              ? deaths.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n              : 0}\r\n            {todayDeaths !== null && (\r\n              <span className='todayResults'>\r\n                +\r\n                {todayDeaths\r\n                  .toString()\r\n                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Recovered'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Recovered\r\n            </Tooltip>\r\n          }>\r\n          <div className='Recovered'>\r\n            <i className='fas fa-hospital-user'></i>\r\n            {recovered !== null\r\n              ? recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n              : 0}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Tests'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Tests\r\n            </Tooltip>\r\n          }>\r\n          <div className='Tests'>\r\n            <i className='fas fa-vial'></i>\r\n            {tests !== null\r\n              ? tests.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n              : 0}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContriesListItem.propTypes = {\r\n  updated: PropTypes.number,\r\n  country: PropTypes.object,\r\n  flag: PropTypes.string,\r\n  cases: PropTypes.number,\r\n  todayCases: PropTypes.number,\r\n  deaths: PropTypes.number,\r\n  todayDeaths: PropTypes.number,\r\n  recovered: PropTypes.number,\r\n  tests: PropTypes.number\r\n};\r\n\r\nexport default ContriesListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContriesListItem from \"./ContriesListItem.jsx\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AllCountriesList = ({\r\n  AllCountriesData: {\r\n    allCountriesData,\r\n    allCountriesSortedByCases,\r\n    allCountriesloading,\r\n  },\r\n}) => {\r\n  return (\r\n    <>\r\n      {allCountriesData === null || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div className=\"AllCountriesList\">\r\n          {allCountriesSortedByCases.map((country, id) => (\r\n            <ContriesListItem country={country} key={id} id={id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAllCountriesList.prototype = {\r\n  allCountriesData: PropTypes.array,\r\n  allCountriesSortedByCases: PropTypes.array,\r\n  allCountriesloading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  AllCountriesData: state.AllCountries,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AllCountriesList);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactMapGL, { FlyToInterpolator, Marker, Popup } from \"react-map-gl\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet apiKey;\r\nprocess.env.NODE_ENV\r\n  ? (apiKey = process.env.REACT_APP_API_KEY)\r\n  : (apiKey = process.env.API_KEY);\r\n\r\nconst GlobalMap = ({\r\n  CurrentCountryData: { currentCountry, currentCountryLoading },\r\n  AllCountriesData: { allCountriesData, allCountriesloading },\r\n}) => {\r\n  const [viewPort, setViewPort] = useState({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    scrollZoom: false,\r\n    boxZoom: false,\r\n    doubleClickZoom: false,\r\n  });\r\n\r\n  const [settings, setsettings] = useState({\r\n    dragPan: false,\r\n    touchAction: \"pan-y\",\r\n    dragRotate: false,\r\n    scrollZoom: false,\r\n    touchZoom: false,\r\n    touchRotate: false,\r\n    keyboard: false,\r\n    doubleClickZoom: false,\r\n  });\r\n\r\n  const [popupState, setPopupState] = useState({\r\n    state: false,\r\n    lat: 16,\r\n    long: 27,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentCountry && !currentCountryLoading) {\r\n      setViewPort({\r\n        ...viewPort,\r\n        latitude: currentCountry.lat,\r\n        longitude: currentCountry.long,\r\n        zoom: 3.5,\r\n        transitionDuration: 3000,\r\n        transitionInterpolator: new FlyToInterpolator(),\r\n      });\r\n      setPopupState({\r\n        state: true,\r\n        name: currentCountry.country,\r\n        flag: currentCountry.flag,\r\n        cases: currentCountry.cases,\r\n        deaths: currentCountry.deaths,\r\n        recovered: currentCountry.recovered,\r\n        lat: currentCountry.lat,\r\n        long: currentCountry.long,\r\n      });\r\n    } else {\r\n      setViewPort({\r\n        ...viewPort,\r\n        latitude: 16,\r\n        longitude: 27,\r\n        zoom: 1.3,\r\n        transitionDuration: 3000,\r\n        transitionInterpolator: new FlyToInterpolator(),\r\n      });\r\n      setPopupState({ ...popupState, state: false });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentCountry, currentCountryLoading]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {allCountriesData === null || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <ReactMapGL\r\n          className=\"map\"\r\n          {...viewPort}\r\n          {...settings}\r\n          mapboxApiAccessToken={apiKey}\r\n          mapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n          onViewportChange={(viewPort) => {\r\n            setViewPort(viewPort);\r\n          }}\r\n          mapboxApiAccessToken={\r\n            \"pk.eyJ1IjoibGFtaDMyIiwiYSI6ImNrZ29sdGw3cjBmM3oyenMzem44ZjhwYW0ifQ.TTXfuoTPvX0eYegfFZFy7Q\"\r\n          }\r\n        >\r\n          {allCountriesData.map((country, id) => (\r\n            <Marker\r\n              key={id}\r\n              latitude={country.countryInfo.lat}\r\n              longitude={country.countryInfo.long}\r\n              offsetTop={-15}\r\n              offsetLeft={-5}\r\n            >\r\n              {currentCountry ? (\r\n                country.countryInfo.lat === currentCountry.lat &&\r\n                country.countryInfo.long === currentCountry.long ? (\r\n                  <i className=\"fas fa-circle selectedCircle\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-circle circle\"></i>\r\n                )\r\n              ) : (\r\n                <i\r\n                  className=\"fas fa-circle circle\"\r\n                  onClick={() =>\r\n                    setPopupState({\r\n                      state: true,\r\n                      name: country.country,\r\n                      flag: country.countryInfo.flag,\r\n                      cases: country.cases,\r\n                      deaths: country.deaths,\r\n                      recovered: country.recovered,\r\n                      lat: country.countryInfo.lat,\r\n                      long: country.countryInfo.long,\r\n                    })\r\n                  }\r\n                ></i>\r\n              )}\r\n            </Marker>\r\n          ))}\r\n          {popupState.state && (\r\n            <Popup\r\n              latitude={popupState.lat}\r\n              longitude={popupState.long}\r\n              closeButton={false}\r\n              offsetTop={-15}\r\n              offsetLeft={3}\r\n              className=\"popupup\"\r\n              onClose={() => {\r\n                if (!currentCountry)\r\n                  setPopupState({ ...popupState, state: false });\r\n              }}\r\n            >\r\n              <div>\r\n                <h6 className=\"popupHeader\">\r\n                  <img\r\n                    src={popupState.flag}\r\n                    alt=\"flag\"\r\n                    style={{ width: \"60px\" }}\r\n                  />\r\n                  {popupState.name}\r\n                </h6>\r\n                <p className=\"popupCases\">\r\n                  Cases:\r\n                  {` ${popupState.cases\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n                <p className=\"popupDeaths\">\r\n                  Deaths:\r\n                  {` ${popupState.deaths\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n                <p className=\"popupRecovered\">\r\n                  Recovered:\r\n                  {` ${popupState.recovered\r\n                    .toString()\r\n                    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`}\r\n                </p>\r\n              </div>\r\n            </Popup>\r\n          )}\r\n        </ReactMapGL>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nGlobalMap.prototype = {\r\n  currentCountry: PropTypes.object,\r\n  currentCountryLoading: PropTypes.bool,\r\n  allCountriesData: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  CurrentCountryData: state.CurrentCountryData,\r\n  AllCountriesData: state.AllCountries,\r\n});\r\n\r\nexport default connect(mapStateToProps)(GlobalMap);\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LineChartItem = ({ Dates, Cases, Deaths, Recovered }) => {\r\n  return (\r\n    <Line\r\n      data={{\r\n        labels: Dates,\r\n        datasets: [\r\n          {\r\n            // radius: 0,\r\n            label: 'Cases',\r\n            data: Cases,\r\n            fill: false,\r\n            borderColor: '#fca903',\r\n            backgroundColor: '#fca903'\r\n          },\r\n          {\r\n            label: 'Deaths',\r\n            data: Deaths,\r\n            fill: false,\r\n            borderColor: '#d14356',\r\n            backgroundColor: '#d14356'\r\n          },\r\n          {\r\n            label: 'Recovered',\r\n            data: Recovered,\r\n            fill: false,\r\n            borderColor: '#49d170',\r\n            backgroundColor: '#49d170'\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            fontColor: '#8a8a8a'\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          backgroundColor: '#ededed',\r\n          borderWidth: '2',\r\n          borderColor: '#8a8a8a',\r\n          titleFontColor: '#4a4a4a',\r\n          bodyFontColor: '#4a4a4a',\r\n          callbacks: {\r\n            label: (tooltipItem, data) => {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n              return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: {\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nLineChartItem.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array\r\n};\r\n\r\nexport default LineChartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LineChartItem from \"./LineChartItem.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LineChart = ({\r\n  DataHistory: {\r\n    Dates,\r\n    WWDates,\r\n    Cases,\r\n    WWCases,\r\n    Deaths,\r\n    WWDeaths,\r\n    Recovered,\r\n    WWRecovered,\r\n    currentCountryLoading,\r\n  },\r\n}) => {\r\n  const [DataHistory, setDataHistory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    WWDates && !Dates\r\n      ? setDataHistory({\r\n          Dates: WWDates,\r\n          Cases: WWCases,\r\n          Deaths: WWDeaths,\r\n          Recovered: WWRecovered,\r\n        })\r\n      : setDataHistory({\r\n          Dates,\r\n          Cases,\r\n          Deaths,\r\n          Recovered,\r\n        });\r\n    // eslint-disable-next-line\r\n  }, [WWDates, Dates]);\r\n\r\n  return (\r\n    <>\r\n      {(!WWDates && !WWCases && !WWDeaths && !WWRecovered) ||\r\n      currentCountryLoading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <LineChartItem\r\n          Dates={DataHistory.Dates}\r\n          Cases={DataHistory.Cases}\r\n          Deaths={DataHistory.Deaths}\r\n          Recovered={DataHistory.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLineChart.propTypes = {\r\n  WWDates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  WWCases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  WWDeaths: PropTypes.array,\r\n  Recovered: PropTypes.array,\r\n  WWRecovered: PropTypes.array,\r\n  currentCountryLoading: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  DataHistory: state.DataHistory,\r\n});\r\n\r\nexport default connect(mapStateToProps)(LineChart);\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BarChartItem = ({ Dates, Cases, Deaths, Recovered }) => {\r\n  return (\r\n    <Bar\r\n      data={{\r\n        labels: Dates,\r\n        datasets: [\r\n          {\r\n            label: 'Cases',\r\n            data: Cases,\r\n            fill: false,\r\n            backgroundColor: '#fca903'\r\n          },\r\n          {\r\n            label: 'Deaths',\r\n            data: Deaths,\r\n            fill: false,\r\n            backgroundColor: '#d14356'\r\n          },\r\n          {\r\n            label: 'Recovered',\r\n            data: Recovered,\r\n            fill: false,\r\n            backgroundColor: '#49d170'\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            fontColor: '#8a8a8a'\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          backgroundColor: '#ededed',\r\n          borderWidth: '2',\r\n          borderColor: '#8a8a8a',\r\n          titleFontColor: '#4a4a4a',\r\n          bodyFontColor: '#4a4a4a',\r\n          callbacks: {\r\n            label: (tooltipItem, data) => {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n              return label.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: {\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                fontSize: 10,\r\n                fontColor: '#2e2e2e'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nBarChartItem.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array\r\n};\r\n\r\nexport default BarChartItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BarChartItem from \"./BarChartItem.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BarChart = ({\r\n  DataHistory: {\r\n    Dates,\r\n    Cases,\r\n    Deaths,\r\n    Recovered,\r\n    WWDates,\r\n    WWCases,\r\n    WWDeaths,\r\n    WWRecovered,\r\n    currentCountryLoading,\r\n  },\r\n}) => {\r\n  const [getDateHistory, setDataHistory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    WWDates && !Dates\r\n      ? setDataHistory({\r\n          Dates: WWDates,\r\n          Cases: WWCases,\r\n          Deaths: WWDeaths,\r\n          Recovered: WWRecovered,\r\n        })\r\n      : setDataHistory({\r\n          Dates,\r\n          Cases,\r\n          Deaths,\r\n          Recovered,\r\n        });\r\n    // eslint-disable-next-line\r\n  }, [Dates, WWDates]);\r\n\r\n  return (\r\n    <>\r\n      {(!WWDates && !WWCases && !WWDeaths && !WWRecovered) ||\r\n      currentCountryLoading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <BarChartItem\r\n          Dates={getDateHistory.Dates}\r\n          Cases={getDateHistory.Cases}\r\n          Deaths={getDateHistory.Deaths}\r\n          Recovered={getDateHistory.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  DataHistory: state.DataHistory,\r\n});\r\n\r\nBarChart.propTypes = {\r\n  Dates: PropTypes.array,\r\n  Cases: PropTypes.array,\r\n  Deaths: PropTypes.array,\r\n  Recovered: PropTypes.array,\r\n  WWDates: PropTypes.array,\r\n  WWCases: PropTypes.array,\r\n  WWDeaths: PropTypes.array,\r\n  WWRecovered: PropTypes.array,\r\n  currentCountryLoading: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps)(BarChart);\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PieChartItem = ({ Cases, Deaths, Recovered }) => {\r\n  return (\r\n    <Pie\r\n      data={{\r\n        datasets: [\r\n          {\r\n            data: [Cases, Deaths, Recovered],\r\n            backgroundColor: ['#fca903', '#d14356', '#49d170']\r\n          }\r\n        ],\r\n        labels: ['Cases', 'Deaths', 'Recovered']\r\n      }}\r\n      options={{\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        // title: {\r\n        //   display: true,\r\n        //   text: \"World's Stats\"\r\n        // },\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            usePointStyle: true,\r\n            fontColor: '#8a8a8a'\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          backgroundColor: '#ededed',\r\n          borderWidth: '2',\r\n          borderColor: '#8a8a8a',\r\n          titleFontColor: '#4a4a4a',\r\n          bodyFontColor: '#4a4a4a',\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              const dataset = data.datasets[tooltipItem.datasetIndex];\r\n              const total = dataset.data.reduce(\r\n                (previousValue, currentValue) => previousValue + currentValue\r\n              );\r\n              return `${data.labels[tooltipItem.index]}: ${Math.floor(\r\n                (dataset.data[tooltipItem.index] / total) * 100 + 0.5\r\n              )}%`;\r\n            }\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPieChartItem.propTypes = {\r\n  Cases: PropTypes.number,\r\n  Deaths: PropTypes.number,\r\n  Recovered: PropTypes.number\r\n};\r\n\r\nexport default PieChartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PieChartItem from \"./pieChartItem.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PieChart = ({\r\n  AllCountriesData: { WWStats, allCountriesloading },\r\n  CurrentCountryData: { currentCountry },\r\n}) => {\r\n  const [getDatas, setDatas] = useState(null);\r\n  useEffect(() => {\r\n    if (currentCountry) {\r\n      setDatas({\r\n        Cases: currentCountry.cases,\r\n        Deaths: currentCountry.deaths,\r\n        Recovered: currentCountry.recovered,\r\n      });\r\n    } else if (WWStats) {\r\n      setDatas({\r\n        Cases: WWStats.cases,\r\n        Deaths: WWStats.deaths,\r\n        Recovered: WWStats.recovered,\r\n      });\r\n    }\r\n  }, [WWStats, currentCountry]);\r\n\r\n  return (\r\n    <>\r\n      {!getDatas || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <PieChartItem\r\n          Cases={getDatas.Cases}\r\n          Deaths={getDatas.Deaths}\r\n          Recovered={getDatas.Recovered}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  WWStats: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n  currentCountry: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  AllCountriesData: state.AllCountries,\r\n  CurrentCountryData: state.CurrentCountryData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChart);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WWStatesChild = ({\r\n  country = null,\r\n  flag = null,\r\n  cases,\r\n  todayCases,\r\n  deaths,\r\n  todayDeaths,\r\n  recovered,\r\n  tests,\r\n  updated\r\n}) => {\r\n  return (\r\n    <>\r\n      {country !== null && flag !== null ? (\r\n        <h1 className='WWStatsHeader'>\r\n          <img src={flag} alt={country} className='countryFlag' />\r\n          COVID-19 in {country}\r\n        </h1>\r\n      ) : (\r\n        <h1 className='WWStatsHeader'>\r\n          <i className='fas fa-globe'></i> COVID-19 Pandemic Worldwide\r\n        </h1>\r\n      )}\r\n\r\n      <div className='WCDR'>\r\n        <OverlayTrigger\r\n          key='Cases'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Cases\r\n            </Tooltip>\r\n          }>\r\n          <div className='WWCases'>\r\n            <p className='WWIcons'>\r\n              <i className='fas fa-users'></i> Cases\r\n            </p>\r\n            {cases.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n            {todayCases > 0 && (\r\n              <span className='WWtodayResults'>\r\n                +\r\n                {todayCases\r\n                  .toString()\r\n                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Deaths'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Deaths\r\n            </Tooltip>\r\n          }>\r\n          <div className='WWDeaths'>\r\n            <p className='WWIcons'>\r\n              <i className='fas fa-skull'></i> Deaths\r\n            </p>\r\n            {deaths.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n            {todayDeaths > 0 && (\r\n              <span className='WWtodayResults'>\r\n                +\r\n                {todayDeaths\r\n                  .toString()\r\n                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Recovered'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Recovered\r\n            </Tooltip>\r\n          }>\r\n          <div className='WWRecovered'>\r\n            <p className='WWIcons'>\r\n              <i className='fas fa-hospital-user'></i> Recovered\r\n            </p>\r\n            {recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n          </div>\r\n        </OverlayTrigger>\r\n\r\n        <OverlayTrigger\r\n          key='Tests'\r\n          placement='bottom'\r\n          overlay={\r\n            <Tooltip className='myToolTip' id='tooltip-bottom'>\r\n              Confirmed Tests\r\n            </Tooltip>\r\n          }>\r\n          <div className='WWTests'>\r\n            <p className='WWIcons'>\r\n              <i className='fas fa-vial'></i> Tests\r\n            </p>\r\n            {tests.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </div>\r\n      <p className='lastUpdate'>\r\n        <i className='far fa-clock' />\r\n        Last update:\r\n        <span>{updated > 0 && moment(updated).fromNow()}.</span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nWWStatesChild.prototype = {\r\n  country: PropTypes.string,\r\n  flag: PropTypes.string,\r\n  cases: PropTypes.number,\r\n  todayCases: PropTypes.number,\r\n  deaths: PropTypes.number,\r\n  todayDeaths: PropTypes.number,\r\n  recovered: PropTypes.number,\r\n  tests: PropTypes.number,\r\n  updated: PropTypes.number\r\n};\r\n\r\nexport default WWStatesChild;\r\n","import React from \"react\";\r\nimport Child from \"./WWStatsChild.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst WWStats = ({\r\n  AllCountriesData: { WWStats, allCountriesloading },\r\n  CurrentCountryData: { currentCountry },\r\n}) => {\r\n  const { updated, cases, todayCases, deaths, todayDeaths, recovered, tests } =\r\n    WWStats || {};\r\n\r\n  return (\r\n    <div className=\"WWStats\">\r\n      {WWStats === null || allCountriesloading ? (\r\n        <div className=\"Spinner\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : currentCountry === null || allCountriesloading ? (\r\n        <Child\r\n          cases={cases}\r\n          todayCases={todayCases}\r\n          deaths={deaths}\r\n          todayDeaths={todayDeaths}\r\n          recovered={recovered}\r\n          tests={tests}\r\n          updated={updated}\r\n        />\r\n      ) : (\r\n        <Child\r\n          country={currentCountry.country}\r\n          flag={currentCountry.flag}\r\n          cases={currentCountry.cases}\r\n          todayCases={currentCountry.todayCases}\r\n          deaths={currentCountry.deaths}\r\n          todayDeaths={currentCountry.todayDeaths}\r\n          recovered={currentCountry.recovered}\r\n          tests={currentCountry.tests}\r\n          updated={currentCountry.updated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nWWStats.prototype = {\r\n  WWStats: PropTypes.object,\r\n  allCountriesloading: PropTypes.bool,\r\n  currentCountry: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  AllCountriesData: state.AllCountries,\r\n  CurrentCountryData: state.CurrentCountryData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(WWStats);\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport AllCountriesList from \"./AllCountriesList.jsx\";\r\nimport LineChart from \"../Charts/LineChart.jsx\";\r\nimport BarChart from \"../Charts/BarChart.jsx\";\r\nimport PieChart from \"../Charts/pieChart.jsx\";\r\nimport GlobalMap from \"../Map/GlobalMap.jsx\";\r\nimport WWStats from \"./WWStats.jsx\";\r\n\r\nconst MidSectionContainer = () => {\r\n  return (\r\n    <Container className=\"MidSection\" fluid>\r\n      <Row>\r\n        <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n          <WWStats />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"rowPadding\">\r\n        <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"8\" xl=\"8\" className=\"noPadding\">\r\n          <p className=\"mapHeader\">\r\n            <i className=\"fas fa-globe-africa\"></i>COVID-19 Pandemic Map\r\n          </p>\r\n          <div className=\"GlobalMap\">\r\n            <GlobalMap />\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"noPadding\">\r\n          <p className=\"countriesListHeader\">\r\n            <i className=\"far fa-flag\"></i>Country Breakdown\r\n          </p>\r\n          <div className=\"countriesListContainer\">\r\n            <AllCountriesList />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"rowPadding\">\r\n        <p className=\"chartsTitle\">\r\n          <i className=\"fas fa-chart-pie\"></i>COVID-19 Pandemic Charts\r\n        </p>\r\n        <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"noPadding\">\r\n          <div className=\"charts\">\r\n            <LineChart />\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"noPadding\">\r\n          <div className=\"charts\">\r\n            <BarChart />\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"noPadding\">\r\n          <div className=\"charts\">\r\n            <PieChart />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MidSectionContainer;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport logo from \"../Assets/images/logo.svg\";\r\n\r\nconst NavComp = () => {\r\n  return (\r\n    <div>\r\n      <Navbar className=\"Navbar\" variant=\"light\" expand=\"lg\" sticky=\"top\">\r\n        <Container>\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            delay={{ show: 150, hide: 150 }}\r\n            overlay={<Tooltip className=\"myToolTip\">COVID-19 Tracker</Tooltip>}\r\n          >\r\n            <Navbar.Brand className=\"titleContiner\">\r\n              <img src={logo} alt=\"logo\" className=\"logo\" />\r\n              <p className=\"title\">COVID-19 Tracker</p>\r\n            </Navbar.Brand>\r\n          </OverlayTrigger>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto justify-content-end navWidth\">\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 150, hide: 150 }}\r\n                overlay={\r\n                  <Tooltip className=\"myToolTip\">\r\n                    World Health Organization\r\n                  </Tooltip>\r\n                }\r\n              >\r\n                <Nav.Link href=\"https://www.who.int/\" target=\"_blank\">\r\n                  <i className=\"fas fa-laptop-medical navIcons\"></i>\r\n                  {window.innerWidth < 992 && (\r\n                    <span className=\"navIconsSpan\">\r\n                      World Health Organization\r\n                    </span>\r\n                  )}\r\n                </Nav.Link>\r\n              </OverlayTrigger>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavComp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst Footer = () => {\r\n  const [nav, showNav] = useState(false);\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      window.scrollY > 200 ? showNav(true) : showNav(false);\r\n    };\r\n  }, []);\r\n\r\n  const scrollUP = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        className={nav ? `upBtn showBotNav` : `upBtn hideBotNAv`}\r\n        onClick={scrollUP}\r\n      >\r\n        <i className=\"fas fa-angle-up\"></i>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <Navbar\r\n          className=\"botNavbar\"\r\n          variant=\"light\"\r\n          expand=\"lg\"\r\n          sticky=\"bottom\"\r\n        >\r\n          <Container>\r\n            <Nav className=\"mr-auto justify-content-end navWidth\">\r\n              <Nav.Link href=\"https://corona.lmao.ninja/\" target=\"_blank\">\r\n                <i\r\n                  className=\"fas fa-code navIcons\"\r\n                  title=\"Data Source: NOVELCovid/API\"\r\n                ></i>\r\n              </Nav.Link>\r\n              <Nav.Link href=\"https://github.com/boblamceo  \" target=\"_blank\">\r\n                <i className=\"fab fa-github-alt navIcons\" title=\"My Github\"></i>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from \"react\";\r\nimport Countries from \"../Components/TopSection/Countries.jsx\";\r\nimport MidSectionContainer from \"../Components/MidSection/MidSectionContainer.jsx\";\r\nimport Navbar from \"../Layouts/Navbar.jsx\";\r\nimport Footer from \"../Layouts/Footer.jsx\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Countries />\r\n      <MidSectionContainer />\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Home from \"./Pages/Home.jsx\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\nimport \"./Assets/Style/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App.jsx\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nReactDOM.render(\n  <Provider\n    store={createStore(\n      rootReducer,\n      initialState,\n      composeWithDevTools(applyMiddleware(...middleware)),\n    )}\n  >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}